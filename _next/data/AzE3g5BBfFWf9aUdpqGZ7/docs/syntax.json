{"pageProps":{"bundle":"!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t(require(\"mdxJsReact\"),require(\"React\")):\"function\"==typeof define&&define.amd?define([\"mdxJsReact\",\"React\"],t):\"object\"==typeof exports?exports.MDXContent=t(require(\"mdxJsReact\"),require(\"React\")):e.MDXContent=t(e.mdxJsReact,e.React)}(this,((e,t)=>(()=>{\"use strict\";var n={24:e=>{e.exports=t},825:t=>{t.exports=e}},a={};function l(e){var t=a[e];if(void 0!==t)return t.exports;var i=a[e]={exports:{}};return n[e](i,i.exports,l),i.exports}l.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return l.d(t,{a:t}),t},l.d=(e,t)=>{for(var n in t)l.o(t,n)&&!l.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},l.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),l.r=e=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})};var i={};return(()=>{l.r(i),l.d(i,{default:()=>a});var e=l(825),t=l(24),n=l.n(t);const a=function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},a=Object.assign({},(0,e.useMDXComponents)(),t.components),l=a.wrapper;return l?n().createElement(l,t,n().createElement(i)):i();function i(){var a=Object.assign({p:\"p\",a:\"a\",code:\"code\",h2:\"h2\",ul:\"ul\",li:\"li\",strong:\"strong\",pre:\"pre\",h3:\"h3\",em:\"em\",span:\"span\",img:\"img\",dl:\"dl\",dt:\"dt\",dd:\"dd\",ol:\"ol\",table:\"table\",thead:\"thead\",tr:\"tr\",th:\"th\",tbody:\"tbody\",td:\"td\",br:\"br\",h4:\"h4\",hr:\"hr\"},(0,e.useMDXComponents)(),t.components),l=a.DocLink,i=a.DocCallOut,r=a.DocBadge,c=a.DocVideo,s=a.DocWhimsical,d=a.DocTabs,m=a.DocTab,p=a.DocAccordion,u=a.DocBadgeAdded,h=a.DocBadgeComingSoon,E=a.DocBadgeDeprecated,g=a.DocRelatedArticles;return p||o(\"DocAccordion\",!0),r||o(\"DocBadge\",!0),u||o(\"DocBadgeAdded\",!0),h||o(\"DocBadgeComingSoon\",!0),E||o(\"DocBadgeDeprecated\",!0),i||o(\"DocCallOut\",!0),l||o(\"DocLink\",!0),g||o(\"DocRelatedArticles\",!0),m||o(\"DocTab\",!0),d||o(\"DocTabs\",!0),c||o(\"DocVideo\",!0),s||o(\"DocWhimsical\",!0),n().createElement(n().Fragment,null,n().createElement(a.p,null,\"The Elastic documentation engine allows for markdown-like content using \",n().createElement(a.a,{href:\"https://mdxjs.com\"},\"MDX\"),\". We often replace and augment the core markdown syntax with React-powered renders that provide additional functionality. In all cases these components are preceeded with the \",n().createElement(a.code,{display:\"inline\"},\"Docs\"),\" prefix.\"),\"\\n\",n().createElement(a.h2,{id:\"frontmatter\"},\"Frontmatter\"),\"\\n\",n().createElement(a.p,null,\"Every MDX document needs to include the following frontmatter.\"),\"\\n\",n().createElement(a.ul,null,\"\\n\",n().createElement(a.li,null,n().createElement(a.code,{display:\"inline\"},\"id\"),\" (\",n().createElement(a.strong,null,\"Required\"),\") Must be unique, should never change. Used in links between pages and in navigation systems. Use camelCase format, for example \",n().createElement(a.code,{display:\"inline\"},\"thisMakesSense\"),\".\"),\"\\n\",n().createElement(a.li,null,n().createElement(a.code,{display:\"inline\"},\"slug\"),\" (\",n().createElement(a.strong,null,\"Required\"),\") Defines the URL path for the page. Must be prefixed by a slash. Should use a prefix to prevent conflicts. Use lowercase and hyphens, for example \",n().createElement(a.code,{display:\"inline\"},\"/docs/this-makes-sense\"),\".\"),\"\\n\",n().createElement(a.li,null,n().createElement(a.code,{display:\"inline\"},\"title\"),\" (\",n().createElement(a.strong,null,\"Required\"),\") Default title display for the document in page headers and links.\"),\"\\n\",n().createElement(a.li,null,n().createElement(a.code,{display:\"inline\"},\"image\"),\" (Optional) Image used for cards and other graphical lists when linking to this page.\"),\"\\n\",n().createElement(a.li,null,n().createElement(a.code,{display:\"inline\"},\"description\"),\" (Optional) One-liner that describes the purpose of the page for human and search engines.\"),\"\\n\",n().createElement(a.li,null,n().createElement(a.code,{display:\"inline\"},\"date\"),\" (Optional) Last updated or verified date for the page.\"),\"\\n\",n().createElement(a.li,null,n().createElement(a.code,{display:\"inline\"},\"tags\"),\" (Optional) Categories that help define related pages.\"),\"\\n\",n().createElement(a.li,null,n().createElement(a.code,{display:\"inline\"},\"related\"),\" (Optional) An array of page IDs that complement the information in the current page.\"),\"\\n\",n().createElement(a.li,null,n().createElement(a.code,{display:\"inline\"},\"layout\"),\" (Optional) Override the default \",n().createElement(a.code,{display:\"inline\"},\"article\"),\" layout. Passing the value \",n().createElement(a.code,{display:\"inline\"},\"landing\"),\" will remove the article's table of contents from the right side of the page.\"),\"\\n\"),\"\\n\",n().createElement(a.pre,null,n().createElement(a.code,{className:\"language-yaml\",display:\"block\"},\"---\\nid: docsSyntax\\nslug: /docs/syntax\\ntitle: Docs syntax\\nimage: https://source.unsplash.com/400x175/?Nature\\ndescription: Code syntax and examples for the custom widgets we use to write the docs.\\ndate: 2020-07-08\\ntags: ['observability','kibana','elasticsearch','beats']\\nrelated: ['docsTroubleshooting']\\n---\\n\\n# Frontmatter starts at the top of the document\\n\\nFrontmatter needs to appear on every MDX document at the start of the page.\\n\\n\")),\"\\n\",n().createElement(a.p,null,\"For more details about recommended values, refer to Content Guidelines.\"),\"\\n\",n().createElement(a.h2,{id:\"links\"},\"Links\"),\"\\n\",n().createElement(a.p,null,\"Links come in two formats. For internal links within the site, utilize the \",n().createElement(a.code,{display:\"inline\"},\"DocLink\"),\" component which will fetch the \",n().createElement(a.code,{display:\"inline\"},\"slug\"),\" and \",n().createElement(a.code,{display:\"inline\"},\"title\"),\" from the page's front matter. You may optionally include the \",n().createElement(a.code,{display:\"inline\"},\"tooltip\"),\" prop which will provide wikipedia-style link previews.\"),\"\\n\",n().createElement(a.h3,{id:\"internal-links\"},\"Internal links\"),\"\\n\",n().createElement(a.pre,null,n().createElement(a.code,{className:\"language-html\",display:\"block\"},'<DocLink id=\"docsSyntax\" />\\n<DocLink id=\"docsSyntax\" text=\"Different link text\"/>\\n<DocLink id=\"docsSyntax\" tooltip />\\n<DocLink id=\"docsSyntax\" section=\"unordered-lists\" text=\"Linking to a specific section\" />\\n')),\"\\n\",n().createElement(a.ul,null,\"\\n\",n().createElement(a.li,null,\"\\n\",n().createElement(l,{id:\"docsSyntax\"}),\"\\n\"),\"\\n\",n().createElement(a.li,null,\"\\n\",n().createElement(l,{id:\"docsSyntax\",text:\"Different link text\"}),\"\\n\"),\"\\n\",n().createElement(a.li,null,\"\\n\",n().createElement(l,{id:\"docsSyntax\",tooltip:!0}),\"\\n\"),\"\\n\",n().createElement(a.li,null,\"\\n\",n().createElement(l,{id:\"docsSyntax\",section:\"unordered-lists\",text:\"Linking to a specific section\"}),\"\\n\"),\"\\n\"),\"\\n\",n().createElement(a.p,null,\"If you include a \",n().createElement(a.code,{display:\"inline\"},\"section\"),\" qualifier, you must use the resolved anchor ID\\n(e.g. \",n().createElement(a.code,{display:\"inline\"},'\"unordered-lists\"'),\"); do not use the section title (e.g. \",n().createElement(a.code,{display:\"inline\"},'\"unordered lists\"'),\").\"),\"\\n\",n().createElement(a.h3,{id:\"external-links\"},\"External links\"),\"\\n\",n().createElement(a.p,null,\"External links use regular Markdown formatting. \",n().createElement(a.code,{display:\"inline\"},'rel=\"no-follow\"'),\" will be automatically applied.\"),\"\\n\",n().createElement(a.pre,null,n().createElement(a.code,{className:\"language-md\",display:\"block\"},\"[Elastic's homepage](https://elastic.co)\\n\")),\"\\n\",n().createElement(a.p,null,n().createElement(a.a,{href:\"https://elastic.co\"},\"Elastic's homepage\")),\"\\n\",n().createElement(a.h2,{id:\"variable-interpolation\"},\"Variable interpolation\"),\"\\n\",n().createElement(a.p,null,\"Variable interpolation replaces a variable with a provided word or phrase that is defined in a mapping in 'variables.json'. The key in \",n().createElement(a.code,{display:\"inline\"},\"variables.json\"),\" can contain alpha-numeric characters, underscores, and hyphens, and is the variable you'll be using in the markdown. The value is what will be injected in its place. If you need to reuse something longer than a word or phrase, use partial mdx files instead.\"),\"\\n\",n().createElement(a.p,null,\"Variable interpolation can be used by itself, within other text, or inside of a code block. For example:\"),\"\\n\",\"\\n\",n().createElement(a.pre,null,n().createElement(a.code,{className:\"language-md\",display:\"block\"},\"Wow, I sure love ((eui))!\\n\\n((isengard))\\n\\n`variables even work in code blocks: ((catName))`\\n\")),\"\\n\",n().createElement(a.p,null,\"Wow, I sure love Elastic \",n().createElement(a.em,null,\"User\"),\" \",n().createElement(a.strong,null,\"Interface\"),\"!\"),\"\\n\",n().createElement(a.p,null,\"They're taking the \",n().createElement(a.strong,null,\"hobbits\"),\" to Isengard!\"),\"\\n\",n().createElement(a.p,null,n().createElement(a.code,{display:\"inline\"},\"variables even work in code blocks: Erwin\")),\"\\n\",n().createElement(a.h2,{id:\"emoji\"},\"Emoji\"),\"\\n\",n().createElement(a.p,null,\"Emoji get proper a11y automatically! \",n().createElement(a.span,{role:\"img\",\"aria-label\":\"hundred points\"},\"ðŸ’¯\")),\"\\n\",n().createElement(a.h2,{id:\"images\"},\"Images\"),\"\\n\",n().createElement(a.p,null,\"Images use the plain Markdown format. They are transformed to \",n().createElement(a.a,{href:\"https://elastic.github.io/eui/#/display/image\"},\"EuiImage\"),\" components behind-the-scenes.\"),\"\\n\",n().createElement(a.pre,null,n().createElement(a.code,{className:\"language-md\",display:\"block\"},\"![title for your image](http://website.com/needs_to_be_an_absolute_link.png)\\n\")),\"\\n\",n().createElement(a.p,null,n().createElement(a.img,{src:\"https://source.unsplash.com/1200x400/?classroom\",alt:\"test image 1\"})),\"\\n\",n().createElement(a.p,null,\"You can also use relative paths to your images. For example:\"),\"\\n\",n().createElement(a.pre,null,n().createElement(a.code,{className:\"language-md\",display:\"block\"},\"![test image 2](images/gourds.png)\\n\")),\"\\n\",n().createElement(a.p,null,n().createElement(a.img,{src:\"/ZWxhc3RpYy9kb2NzbW9iaWxlL2RvYy1zaXRl/docs/images/gourds.png\",alt:\"test image 2\"})),\"\\n\",n().createElement(a.h2,{id:\"doccallout\"},\"DocCallOut\"),\"\\n\",n().createElement(a.p,null,\"Use a \",n().createElement(a.code,{display:\"inline\"},\"DocCallOut\"),\" to highlight a piece of content. You can add a title on its\\nown to tell the user something important, or use the title to call attention to\\ncontent you want to further explain.\"),\"\\n\",n().createElement(a.pre,null,n().createElement(a.code,{className:\"language-html\",display:\"block\"},'\\n<DocCallOut title=\"Default callout with Markdown\">\\n  If you don\\'t specify `color`, the default `DocCallOut` color is blue.\\n\\n  You can add **Markdown** syntax *and* other doc components, like <DocLink id=\"docsSyntax\" text=\"this link\"/>.\\n</DocCallOut>\\n\\n<DocCallOut color=\"warning\" title=\"This title needs no description\" />\\n\\n<DocCallOut color=\"danger\" title=\"This title alerts users to something serious\">\\n  So serious, that we need to tell you more about it.\\n</DocCallOut>\\n')),\"\\n\",n().createElement(i,{title:\"Default callout with Markdown\"},n().createElement(a.p,null,\"If you don't specify \",n().createElement(a.code,{display:\"inline\"},\"color\"),\", the default \",n().createElement(a.code,{display:\"inline\"},\"DocCallOut\"),\" color is blue.\"),n().createElement(a.p,null,\"You can add \",n().createElement(a.strong,null,\"Markdown\"),\" syntax \",n().createElement(a.em,null,\"and\"),\" other doc components, like \",n().createElement(l,{id:\"docsSyntax\",text:\"this link\"}),\".\")),\"\\n\",n().createElement(i,{color:\"warning\",title:\"This title needs no description\"}),\"\\n\",n().createElement(i,{color:\"danger\",title:\"This title alerts users to something serious\"},n().createElement(a.p,null,\"So serious, that we need to tell you more about it.\")),\"\\n\",n().createElement(a.h3,{id:\"predefined-callouts\"},\"Predefined callouts\"),\"\\n\",n().createElement(a.p,null,\"Use predefined callouts by specifying a template. The templates are defined in \",n().createElement(a.code,{display:\"inline\"},\"config/callout.ts\"),\".\"),\"\\n\",n().createElement(a.pre,null,n().createElement(a.code,{className:\"language-html\",display:\"block\"},'<DocCallOut template=\"development\" />\\n<DocCallOut template=\"beta\" />\\n<DocCallOut template=\"technical_preview\" />\\n')),\"\\n\",n().createElement(i,{template:\"development\"}),\"\\n\",n().createElement(i,{template:\"beta\"}),\"\\n\",n().createElement(i,{template:\"technical_preview\"}),\"\\n\",n().createElement(a.h2,{id:\"lists\"},\"Lists\"),\"\\n\",n().createElement(a.p,null,\"You can create lists using typical Markdown format.\"),\"\\n\",n().createElement(a.p,null,\"To add another element in a list while preserving the continuity of the list,\\nindent the element four spaces or one tab.\"),\"\\n\",n().createElement(a.h3,{id:\"definition-lists\"},\"Definition lists\"),\"\\n\",n().createElement(a.p,null,\"To create a definition list (also known as a \",n().createElement(a.em,null,\"description list\"),\"), type the term\\non the first line. On the next line, type a colon followed by a space and the\\ndefinition. For example:\"),\"\\n\",n().createElement(a.pre,null,n().createElement(a.code,{className:\"language-md\",display:\"block\"},'Term 1\\n\\n: Definition 1\\n\\n`Term 2`\\n\\n: <DocBadge template=\"beta\" /> Definition 2\\n')),\"\\n\",n().createElement(a.dl,null,n().createElement(a.dt,null,\"Term 1\"),n().createElement(a.dd,null,\"Definition 1\"),n().createElement(a.dt,null,n().createElement(a.code,{display:\"inline\"},\"Term 2\")),n().createElement(a.dd,null,n().createElement(r,{template:\"beta\"}),\" Definition 2\")),\"\\n\",n().createElement(a.h3,{id:\"ordered-lists\"},\"Ordered lists\"),\"\\n\",n().createElement(a.p,null,\"To create an ordered list, use numbers followed by periods. The numbers donâ€™t\\nhave to be in numerical order, but the list should start with the number one.\\nFor example:\"),\"\\n\",n().createElement(a.pre,null,n().createElement(a.code,{className:\"language-md\",display:\"block\"},\"1. First item\\n3. Second item\\n5. Third item\\n    1. Indented item\\n    2. Indented item\\n8. Fourth item\\n\")),\"\\n\",n().createElement(a.ol,null,\"\\n\",n().createElement(a.li,null,\"First item\"),\"\\n\",n().createElement(a.li,null,\"Second item\"),\"\\n\",n().createElement(a.li,null,\"Third item\",\"\\n\",n().createElement(a.ol,null,\"\\n\",n().createElement(a.li,null,\"Indented item\"),\"\\n\",n().createElement(a.li,null,\"Indented item\"),\"\\n\"),\"\\n\"),\"\\n\",n().createElement(a.li,null,\"Fourth item\"),\"\\n\"),\"\\n\",n().createElement(a.h3,{id:\"unordered-lists\"},\"Unordered lists\"),\"\\n\",n().createElement(a.p,null,\"To create an unordered list, use dashes (-), asterisks (*), or plus signs (+).\\nIndent one or more items to create a nested list. For example:\"),\"\\n\",n().createElement(a.pre,null,n().createElement(a.code,{className:\"language-md\",display:\"block\"},\"- First item\\n- Second item\\n- Third item\\n    - Indented item\\n    - Indented item\\n- Fourth item\\n\")),\"\\n\",n().createElement(a.ul,null,\"\\n\",n().createElement(a.li,null,\"First item\"),\"\\n\",n().createElement(a.li,null,\"Second item\"),\"\\n\",n().createElement(a.li,null,\"Third item\",\"\\n\",n().createElement(a.ul,null,\"\\n\",n().createElement(a.li,null,\"Indented item\"),\"\\n\",n().createElement(a.li,null,\"Indented item\"),\"\\n\"),\"\\n\"),\"\\n\",n().createElement(a.li,null,\"Fourth item\"),\"\\n\"),\"\\n\",n().createElement(a.h2,{id:\"math\"},\"Math\"),\"\\n\",n().createElement(a.p,null,\"Math is handled through \",n().createElement(a.a,{href:\"https://github.com/Rokt33r/remark-math\"},\"remark-math\"),\" which supports latex style math notation.\"),\"\\n\",n().createElement(a.pre,null,n().createElement(a.code,{className:\"language-md\",display:\"block\"},\"$a^2 + b^2 = c^2$\\n\\n$$\\na^2 + b^2 = c^2\\n$$\\n\")),\"\\n\",n().createElement(a.p,null,\"$a^2 + b^2 = c^2$\"),\"\\n\",n().createElement(a.p,null,\"$$\\na^2 + b^2 = c^2\\n$$\"),\"\\n\",n().createElement(a.h2,{id:\"video\"},\"Video\"),\"\\n\",n().createElement(a.p,null,\"The \",n().createElement(a.code,{display:\"inline\"},\"DocVideo\"),\" component allows you to embed video. The \",n().createElement(a.code,{display:\"inline\"},\"id\"),\" and \",n().createElement(a.code,{display:\"inline\"},\"title\"),\" props are required. The source \",n().createElement(a.code,{display:\"inline\"},\"source\"),\" prop accepts \",n().createElement(a.code,{display:\"inline\"},\"youtube\"),\" or \",n().createElement(a.code,{display:\"inline\"},\"gdrive\"),\".\"),\"\\n\",n().createElement(a.pre,null,n().createElement(a.code,{className:\"language-jsx\",display:\"block\"},'<DocVideo id=\"lcWKALztQ5A\" title=\"Some YouTube video\" />\\n\\n<DocVideo id=\"1c9NzJ22UMoJKXXz1j4pgDcopATMMAojb\" source=\"gdrive\" title=\"Some gdrive video\" />\\n')),\"\\n\",n().createElement(c,{id:\"lcWKALztQ5A\",title:\"Some YouTube video\"}),\"\\n\",n().createElement(c,{id:\"1c9NzJ22UMoJKXXz1j4pgDcopATMMAojb\",source:\"gdrive\",title:\"Some gdrive video\"}),\"\\n\",n().createElement(a.h2,{id:\"whimsical-diagrams\"},\"Whimsical diagrams\"),\"\\n\",n().createElement(a.p,null,\"The \",n().createElement(a.code,{display:\"inline\"},\"DocWhimsical\"),\" component allows you to embed Whimsical diagrams. The \",n().createElement(a.code,{display:\"inline\"},\"id\"),\" and \",n().createElement(a.code,{display:\"inline\"},\"title\"),\" props are required. Optional props of \",n().createElement(a.code,{display:\"inline\"},\"ratioWidth\"),\" and \",n().createElement(a.code,{display:\"inline\"},\"ratioHeight\"),\" allow you to set a bounding shape to the fullwidth iFrame. By default it displays at a \",n().createElement(a.code,{display:\"inline\"},\"16:9\"),\" ratio.\"),\"\\n\",n().createElement(a.pre,null,n().createElement(a.code,{className:\"language-jsx\",display:\"block\"},'<DocWhimsical id=\"5MsNxgxCof3oDNhSiD1Nwv\" title=\"Some Whimsical Diagram\" />\\n\\nThe ratio can be controlled like so.\\n\\n<DocWhimsical id=\"5MsNxgxCof3oDNhSiD1Nwv\" ratioWidth={10} ratioHeight={1} title=\"Some Whimsical Diagram\" />\\n')),\"\\n\",n().createElement(s,{id:\"5MsNxgxCof3oDNhSiD1Nwv\",title:\"Some Whimsical Diagram\"}),\"\\n\",n().createElement(a.p,null,\"The ratio can be controlled like so.\"),\"\\n\",n().createElement(s,{id:\"5MsNxgxCof3oDNhSiD1Nwv\",ratioWidth:10,ratioHeight:1,title:\"Some Whimsical Diagram\"}),\"\\n\",n().createElement(a.h2,{id:\"code-blocks\"},\"Code blocks\"),\"\\n\",n().createElement(a.p,null,\"Code bocks use typical markdown \",n().createElement(a.code,{display:\"inline\"},\"code\"),\" blocks using back-ticks ```. You can optionally include the language on the first line to provide highlighting for that language.\"),\"\\n\",n().createElement(a.pre,null,n().createElement(a.code,{className:\"language-md\",display:\"block\"},\"```tsx\\nexport const EuiIconTip: FunctionComponent<Props> = ({\\n  type = 'questionInCircle',\\n  'aria-label': ariaLabel = 'Info',\\n  color,\\n  size,\\n  iconProps,\\n  position = 'top',\\n  delay = 'regular',\\n  ...rest\\n}) => (\\n  <EuiToolTip position={position} delay={delay} {...rest}>\\n    <EuiIcon\\n      tabIndex={0}\\n      type={type}\\n      color={color}\\n      size={size}\\n      aria-label={ariaLabel}\\n      {...iconProps}\\n    />\\n  </EuiToolTip>\\n);\\n```\\n\")),\"\\n\",n().createElement(a.h2,{id:\"tables\"},\"Tables\"),\"\\n\",n().createElement(a.p,null,\"Tables can accept typical markdown structure using pipes. Note that there are several extensions for many code editors that will help you auto-align and space your markdown tables.\"),\"\\n\",n().createElement(a.pre,null,n().createElement(a.code,{className:\"language-markdown\",display:\"block\"},\"| Tables        | Are           | Cool  |\\n| ------------- |:-------------:| -----:|\\n| col 3 is      | right-aligned | $1600 |\\n| col 2 is      | centered      |   $12 |\\n| zebra stripes | are neat      |    $1 |\\n\")),\"\\n\",n().createElement(a.table,null,n().createElement(a.thead,null,n().createElement(a.tr,null,n().createElement(a.th,null,\"Tables\"),n().createElement(a.th,{align:\"center\"},\"Are\"),n().createElement(a.th,{align:\"right\"},\"Cool\"))),n().createElement(a.tbody,null,n().createElement(a.tr,null,n().createElement(a.td,null,\"col 3 is\"),n().createElement(a.td,{align:\"center\"},\"right-aligned\"),n().createElement(a.td,{align:\"right\"},\"$1600\")),n().createElement(a.tr,null,n().createElement(a.td,null,\"col 2 is\"),n().createElement(a.td,{align:\"center\"},\"centered\"),n().createElement(a.td,{align:\"right\"},\"$12\")),n().createElement(a.tr,null,n().createElement(a.td,null,\"zebra stripes\"),n().createElement(a.td,{align:\"center\"},\"are neat\"),n().createElement(a.td,{align:\"right\"},\"$1\")))),\"\\n\",n().createElement(a.p,null,\"There must be at least 3 dashes separating each header cell. The outer pipes (|)\\nare optional, and you don't need to make the raw Markdown line up prettily. You\\ncan also use inline Markdown.\"),\"\\n\",n().createElement(a.h2,{id:\"tabs\"},\"Tabs\"),\"\\n\",n().createElement(a.p,null,\"To structure your content into a tabbed interface use the \",n().createElement(a.code,{display:\"inline\"},\"DocTabs\"),\" component. Individual\\ntabs are easily created using \",n().createElement(a.code,{display:\"inline\"},\"DocTab\"),\". A tab name must be specified for each. (e.g. \",n().createElement(a.code,{display:\"inline\"},\"DocTab name='macOS'\"),\").\"),\"\\n\",n().createElement(a.p,null,\"Inside the \",n().createElement(a.code,{display:\"inline\"},\"DocTab\"),\" block, you can use Markdown syntax, HTML, and other doc components.\"),\"\\n\",n().createElement(a.p,null,\"You can add a border around the tabs to separate them from other content by adding the \",n().createElement(a.code,{display:\"inline\"},\"hasBorder\"),\" prop to \",n().createElement(a.code,{display:\"inline\"},\"DocTabs\"),\".\"),\"\\n\",n().createElement(d,{hasBorder:!0},n().createElement(m,{name:\"First tab\"},n().createElement(a.p,null,\"Content for your first tab. You can add \",n().createElement(a.strong,null,\"Markdown\"),\" syntax \",n().createElement(a.em,null,\"and\"),\" other doc components, like \",n().createElement(l,{id:\"docsSyntax\",text:\"this link\"}),\".\")),n().createElement(m,{name:\"Second tab\"},n().createElement(a.p,null,\"Content for your second tab. Why not add a code block?\"),n().createElement(a.pre,null,n().createElement(a.code,{className:\"language-html\",display:\"block\"},\" <p>Here is an example of some code</p>\\n\")))),\"\\n\",n().createElement(a.br),\"\\n\",n().createElement(a.pre,null,n().createElement(a.code,{className:\"language-html\",display:\"block\"},'<DocTabs hasBorder>\\n  <DocTab name=\"First tab\">\\n    Content for your first tab. You can add **Markdown** syntax *and* other doc components, like <DocLink id=\"docsSyntax\" text=\"this link\" />.\\n  </DocTab>\\n  <DocTab name=\"Second tab\">\\n    Content for your second tab. Why not add a code block?\\n\\n    ```html\\n     <p>Here is an example of some code</p>\\n    ```\\n  </DocTab>\\n</DocTabs>\\n')),\"\\n\",n().createElement(a.br),\"\\n\",n().createElement(a.p,null,\"Alternatively, you can pass the individual tabs in as an array of objects. However, it's important to note that when using this approach, \",n().createElement(a.strong,null,\"Markdown cannot be used inside the content prop\"),\".\"),\"\\n\",n().createElement(a.pre,null,n().createElement(a.code,{className:\"language-tsx\",display:\"block\"},\"  <DocTabs hasBorder tabs={\\n    [\\n      {\\n        id: 'first-tab',\\n        name: 'First Tab',\\n        content: (\\n          <p>Content for first tab.</p>\\n        ),\\n      },\\n      {\\n        id: 'second-tab',\\n        name: 'Second Tab',\\n        content: (\\n          <p>Content for second tab.</p>\\n        ),\\n      }\\n    ]\\n  }\\n  />\\n\")),\"\\n\",n().createElement(a.h2,{id:\"accordion\"},\"Accordion\"),\"\\n\",n().createElement(a.pre,null,n().createElement(a.code,{className:\"language-jsx\",display:\"block\"},'<DocAccordion buttonContent=\"Hello there\">\\n  I am some **markdown** content\\n\\n  I can also accept other components inside.\\n\\n  <DocCallOut template=\"technical_preview\" />\\n\\n</DocAccordion>\\n\\n<DocAccordion buttonContent=\"Click me for fun stuff\" initialIsOpen>\\n  This accordion is open initially by using `initialIsOpen`\\n\\n  <DocAccordion buttonContent=\"A nested example\">\\n    This is a really bad idea, so don\\'t do it often\\n  </DocAccordion>\\n</DocAccordion>\\n\\n\\n')),\"\\n\",n().createElement(p,{buttonContent:\"Click me for fun stuff\"},n().createElement(a.p,null,\"I am some \",n().createElement(a.strong,null,\"markdown\"),\" content\"),n().createElement(a.p,null,\"I can also accept other components inside.\"),n().createElement(i,{template:\"technical_preview\"})),\"\\n\",n().createElement(p,{buttonContent:\"Click me for fun stuff\",initialIsOpen:!0},n().createElement(a.p,null,\"This accordion is open initially by using \",n().createElement(a.code,{display:\"inline\"},\"initialIsOpen\")),n().createElement(p,{buttonContent:\"A nested example\"},n().createElement(a.p,null,\"This is a really bad idea, so don't do it often\"))),\"\\n\",n().createElement(a.h2,{id:\"comments\"},\"Comments\"),\"\\n\",n().createElement(a.p,null,\"Comments are text strings that are not rendered in the output.\\nTo create a comment, use the following syntax:\"),\"\\n\",n().createElement(a.pre,null,n().createElement(a.code,{className:\"language-md\",display:\"block\"},\"{/* I'm a comment */}\\n\")),\"\\n\",n().createElement(a.h2,{id:\"badges\"},\"Badges\"),\"\\n\",n().createElement(a.p,null,n().createElement(a.code,{display:\"inline\"},\"DocBadge\"),\" creates a small badge using a prop \",n().createElement(a.code,{display:\"inline\"},\"template\"),\" that is defined in an object array in \",n().createElement(a.code,{display:\"inline\"},\"config/badge.ts\"),\". For supported values for the \",n().createElement(a.code,{display:\"inline\"},\"iconType\"),\", see \",n().createElement(a.a,{href:\"https://elastic.github.io/eui/#/display/icons\"},\"EUI icons\"),\".\"),\"\\n\",n().createElement(a.p,null,\"The badge can be used inline next to other text. For example:\"),\"\\n\",n().createElement(a.pre,null,n().createElement(a.code,{className:\"language-html\",display:\"block\"},'<DocBadge template=\"beta\" /> To describe beta functionality\\n\\n<DocBadge template=\"in development\" /> To describe features under development\\n\\n<DocBadge template=\"technical preview\" /> To describe technical preview (formerly experimental) functionality\\n\\n#### Example next to a header <DocBadge template=\"kibana\" />\\n\\n<DocBadge template=\"kibana\" /> Before a paragraph\\n')),\"\\n\",n().createElement(a.p,null,n().createElement(r,{template:\"beta\"}),\" To describe beta functionality\"),\"\\n\",n().createElement(a.p,null,n().createElement(r,{template:\"in development\"}),\" To describe features under development\"),\"\\n\",n().createElement(a.p,null,n().createElement(r,{template:\"technical preview\"}),\" To describe technical preview (formerly experimental) functionality\"),\"\\n\",n().createElement(a.h4,{id:\"example-next-to-a-header-\"},\"Example next to a header \",n().createElement(r,{template:\"kibana\"})),\"\\n\",n().createElement(a.p,null,n().createElement(r,{template:\"kibana\"}),\" Before a paragraph\"),\"\\n\",n().createElement(a.h3,{id:\"additions\"},\"Additions\"),\"\\n\",n().createElement(a.p,null,n().createElement(a.code,{display:\"inline\"},\"DocBadgeAdded\"),\" is a component that can be used to indicate additions. It accepts tooltip values.\"),\"\\n\",n().createElement(a.pre,null,n().createElement(a.code,{className:\"language-html\",display:\"block\"},'<DocBadgeAdded tipTitle=\"Added in 1.7\" tipContent=\"I am additional context about this\">1.7</DocBadgeAdded>\\n')),\"\\n\",n().createElement(a.p,null,n().createElement(a.code,{display:\"inline\"},\"void SetLabel(string key, T value)\"),\" \",n().createElement(u,{tipTitle:\"Added in 1.7\",tipContent:\"I am additional context about this\"},\"1.7\")),\"\\n\",n().createElement(a.h3,{id:\"coming-soon\"},\"Coming soon\"),\"\\n\",n().createElement(a.p,null,n().createElement(a.code,{display:\"inline\"},\"DocBadgeComingSoon\"),\" is a component that can be used to indicate functionality coming in a future release. It accepts tooltip values.\"),\"\\n\",n().createElement(a.pre,null,n().createElement(a.code,{className:\"language-html\",display:\"block\"},'<DocBadgeComingSoon tipTitle=\"Coming in 8.0\" tipContent=\"I am additional context about this\">8.0</DocBadgeComingSoon>\\n')),\"\\n\",n().createElement(a.p,null,\"What's new in \",n().createElement(a.code,{display:\"inline\"},\"8.0\"),\"? \",n().createElement(h,{tipTitle:\"Coming in 8.0\",tipContent:\"I am additional context about this\"},\"8.0\")),\"\\n\",n().createElement(a.h3,{id:\"deprecations\"},\"Deprecations\"),\"\\n\",n().createElement(a.p,null,n().createElement(a.code,{display:\"inline\"},\"DocBadgeDeprecated\"),\" is a component that can be used to indicate deprecations. It accepts tooltip values.\"),\"\\n\",n().createElement(a.pre,null,n().createElement(a.code,{className:\"language-html\",display:\"block\"},'<DocBadgeDeprecated tipTitle=\"Deprecated in 7.10\" tipContent=\"I am additional context about this\">7.10</DocBadgeDeprecated>\\n')),\"\\n\",n().createElement(a.p,null,n().createElement(a.code,{display:\"inline\"},\"beat.cpu.*.time.metrics\"),\" \",n().createElement(E,{tipTitle:\"Deprecated in 7.10\",tipContent:\"I am additional context about this\"},\"7.10\")),\"\\n\",n().createElement(a.h2,{id:\"horizontal-rule\"},\"Horizontal rule\"),\"\\n\",n().createElement(a.p,null,\"A thematic break (horizontal rule) can be added with three or more matching \",n().createElement(a.code,{display:\"inline\"},\"-\"),\", \",n().createElement(a.code,{display:\"inline\"},\"_\"),\", or \",n().createElement(a.code,{display:\"inline\"},\"*\"),\" characters.\\nA blank line must come immediately before and after the matching characters.\"),\"\\n\",n().createElement(a.pre,null,n().createElement(a.code,{className:\"language-md\",display:\"block\"},\"This paragraph is about cars.\\n\\n---\\n\\nThis paragraph is about cats.\\n\")),\"\\n\",n().createElement(a.p,null,\"This paragraph is about cars.\"),\"\\n\",n().createElement(a.hr),\"\\n\",n().createElement(a.p,null,\"This paragraph is about cats.\"),\"\\n\",n().createElement(a.h2,{id:\"landing-pages\"},\"Landing pages\"),\"\\n\",n().createElement(a.p,null,\"Landing pages should be used to give users a quick introduction to the content in the category or section that they're about to read. They are comprised of a prominent title and summary area at the top of the page, followed by either a paragraph of introductory text or a set of links to related articles.\"),\"\\n\",n().createElement(a.p,null,n().createElement(a.img,{src:\"/ZWxhc3RpYy9kb2NzbW9iaWxlL2RvYy1zaXRl/docs/images/docs-landing-page.png\",alt:\"Landing pages\"})),\"\\n\",n().createElement(a.p,null,\"The above page is very easy to create in markdown.\"),\"\\n\",n().createElement(a.pre,null,n().createElement(a.code,{className:\"language-md\",display:\"block\"},\"---\\nid: docsLanding\\ntitle: Elastic Docs System\\ndescription: Documentation about the docs system.\\nslug: /docs/landing/\\nlayout: landing\\n---\\nimport items from './landing-example.json'\\n\\n<DocLandingHero\\n  icon='pencil'\\n  title='Docs System'\\n  description=\\\"Find out about the system behind the system. This set of documentation will help you run the new docs system locally and begin contributing to it's development.\\\"\\n  buttonText='Get started'\\n  landingPageId='docsSyntax'\\n/>\\n\\n<DocRelatedArticles\\n  sectionTitle='Related articles'\\n  items={items}\\n/>\\n\")),\"\\n\",n().createElement(a.br),\"\\n\",n().createElement(a.p,null,\"The frontmatter is consistent with other docs article pages with one exception, by adding \",n().createElement(a.code,{display:\"inline\"},\"layout: landing\"),\", the table of contents typically present on the right side of most docs pages is no longer visible.\"),\"\\n\",n().createElement(a.h3,{id:\"hero-section\"},\"Hero section\"),\"\\n\",n().createElement(a.p,null,\"A hero section can focus a page around a clear objective. Try to ensure that you have provided a precise title and an informative description. The \",n().createElement(a.code,{display:\"inline\"},\"DocLandingHero\"),\" components require the following attributes: \",n().createElement(a.code,{display:\"inline\"},\"title\"),\", \",n().createElement(a.code,{display:\"inline\"},\"description\"),\", and \",n().createElement(a.code,{display:\"inline\"},\"icon\"),\" (as one of \",n().createElement(a.a,{href:\"https://elastic.github.io/eui/#/display/icons\"},\"EUI's icon types\"),\"). If you wish to add a prominent call-to-action button, you can do so by including the \",n().createElement(a.code,{display:\"inline\"},\"ctaButtonText\"),\" and \",n().createElement(a.code,{display:\"inline\"},\"ctaPageId\"),\" attributes.\"),\"\\n\",n().createElement(a.pre,null,n().createElement(a.code,{className:\"language-js\",display:\"block\"},\"<DocLandingHero\\n  icon='pencil'\\n  title='Docs System'\\n  description=\\\"Find out about the system behind the system. This set of documentation will help you run the new docs system locally and begin contributing to it's development.\\\"\\n  ctaButtonText='Get started'\\n  ctaPageId='docsSyntax'\\n/>\\n\")),\"\\n\",n().createElement(a.h3,{id:\"related-articles\"},\"Related articles\"),\"\\n\",n().createElement(a.p,null,\"Related articles are a great way to highlight the most important, or most popular articles in your documentation, ensuring they're discoverable to users.\\nThe \",n().createElement(a.code,{display:\"inline\"},\"DocRelatedArticles\"),\" component takes an optional \",n().createElement(a.code,{display:\"inline\"},\"sectionTitle\"),\" string attribute, as well as an array of items.\"),\"\\n\",n().createElement(a.p,null,\"If you wish to link to a page outside of the documentation, rather than using \",n().createElement(a.code,{display:\"inline\"},\"pageId\"),\" in the \",n().createElement(a.code,{display:\"inline\"},\"items\"),\" object, \",n().createElement(a.code,{display:\"inline\"},\"href\"),\" is an available prop and \",n().createElement(a.code,{display:\"inline\"},\"target\"),\" can be used to specify whether the link opens in a new tab or not.\"),\"\\n\",n().createElement(g,{sectionTitle:\"Related Articles Example\",items:[{pageId:\"docsNavigation\"},{title:\"Troubleshooting docs errors\",description:\"How to debug problems in the docs system.\",pageId:\"docsTroubleshooting\"},{title:\"Docs Github repo\",description:\"View the codebase powering the docs project.\",href:\"https://github.com\",target:\"_blank\"}]}),\"\\n\",n().createElement(a.br),\"\\n\",n().createElement(a.pre,null,n().createElement(a.code,{className:\"language-js\",display:\"block\"},'<DocRelatedArticles\\n  sectionTitle=\\'Related Articles Example\\'\\n  items={\\n    [\\n      {\\n        \"pageId\": \"docsSearchDev\"\\n      },\\n      {\\n        \"title\": \"Troubleshooting docs errors\",\\n        \"description\": \"How to debug problems in the docs system.\",\\n        \"pageId\": \"docsTroubleshooting\"\\n      },\\n      {\\n        \"title\": \"Docs Github repo\",\\n        \"description\": \"View the codebase powering the docs project.\",\\n        \"href\": \"https://github.com\",\\n        \"target\": \"_blank\"\\n      },\\n    ]\\n  }\\n/>\\n')),\"\\n\",n().createElement(a.h3,{id:\"links-to-other-categoriessections\"},\"Links to other categories/sections\"),\"\\n\",n().createElement(a.p,null,\"The \",n().createElement(a.code,{display:\"inline\"},\"DocRandomizedLinkList\"),\" can be added to the bottom of the landing page to provide users an easy way to discover new content. It does not require any configuration and will produce a different set of links each time the page is refreshed.\"),\"\\n\",n().createElement(a.pre,null,n().createElement(a.code,{className:\"language-js\",display:\"block\"},\"<DocRandomizedLinkList />\\n\")),\"\\n\",n().createElement(a.h2,{id:\"limitations\"},\"Limitations\"),\"\\n\",n().createElement(a.h3,{id:\"reserved-syntax\"},\"Reserved Syntax\"),\"\\n\",n().createElement(a.p,null,\"The characters \",n().createElement(a.code,{display:\"inline\"},\"<>\"),\" and \",n().createElement(a.code,{display:\"inline\"},\"{}\"),\" are reserved for components and expressions, respectively.\\nAs text, they can only be added to documentation files when in code blocks or snippets.\\nThe \",n().createElement(a.code,{display:\"inline\"},\"$\"),\" character is reserved \",n().createElement(l,{id:\"docsSyntax\",section:\"math\",text:\"for math equations\"}),\". As text, they either need to be escaped (\\\\$) or used in code blocks or snippets.\\nDouble \",n().createElement(a.code,{display:\"inline\"},\"(())\"),\" is reserved for \",n().createElement(l,{id:\"docsSyntax\",section:\"variable-interpolation\",text:\"variable interpolation\"}),\". As text, they either need to be escaped: \\\\(\\\\(\\\\)\\\\). In a code block you only need to escape the first parenthesis.\"),\"\\n\",n().createElement(a.h3,{id:\"excluded-files\"},\"Excluded files\"),\"\\n\",n().createElement(a.p,null,\"MDX files meant for \",n().createElement(a.a,{href:\"https://storybook.js.org/\"},\"Storybook\"),\" will not be included (i.e. \",n().createElement(a.a,{href:\"https://storybook.js.org/docs/react/api/mdx\"},\"files that end in \",n().createElement(a.code,{display:\"inline\"},\".stories.mdx\")),\"). An mdx page without a slug won't be created into a page (how would we know where to put it?).\"))}};function o(e,t){throw new Error(\"Expected \"+(t?\"component\":\"object\")+\" `\"+e+\"` to be defined: you likely forgot to import, pass, or provide it.\")}})(),i})()));","frontmatter":{"id":"docsSyntax","slug":"/docs/syntax","title":"MDX docs syntax","image":"https://source.unsplash.com/400x175/?Nature","description":"Code syntax and examples for the custom widgets we use to write the docs","tags":["docs"],"related":["docsTroubleshooting"],"date":"2022-03-08T00:00:00.000Z","link":"https://github.com/elastic/docsmobile/doc-site/blob/main","linkPath":"docs/docs_syntax.mdx"},"missionId":"krVideos"},"__N_SSG":true}