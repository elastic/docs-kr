{"pageProps":{"bundle":"!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t(require(\"mdxJsReact\"),require(\"React\")):\"function\"==typeof define&&define.amd?define([\"mdxJsReact\",\"React\"],t):\"object\"==typeof exports?exports.MDXContent=t(require(\"mdxJsReact\"),require(\"React\")):e.MDXContent=t(e.mdxJsReact,e.React)}(this,((e,t)=>(()=>{\"use strict\";var n={24:e=>{e.exports=t},825:t=>{t.exports=e}},o={};function l(e){var t=o[e];if(void 0!==t)return t.exports;var a=o[e]={exports:{}};return n[e](a,a.exports,l),a.exports}l.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return l.d(t,{a:t}),t},l.d=(e,t)=>{for(var n in t)l.o(t,n)&&!l.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},l.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),l.r=e=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})};var a={};return(()=>{l.r(a),l.d(a,{default:()=>o});var e=l(825),t=l(24),n=l.n(t);const o=function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},o=Object.assign({},(0,e.useMDXComponents)(),t.components),l=o.wrapper;return l?n().createElement(l,t,n().createElement(a)):a();function a(){var o=Object.assign({h2:\"h2\",p:\"p\",code:\"code\",pre:\"pre\",table:\"table\",thead:\"thead\",tr:\"tr\",th:\"th\",tbody:\"tbody\",td:\"td\",a:\"a\",h3:\"h3\",ul:\"ul\",li:\"li\"},(0,e.useMDXComponents)(),t.components),l=o.DocWhimsical,a=o.DocCallOut;return a||r(\"DocCallOut\",!0),l||r(\"DocWhimsical\",!0),n().createElement(n().Fragment,null,n().createElement(o.h2,{id:\"what-youll-learn\"},\"What you'll learn\"),\"\\n\",n().createElement(o.p,null,\"This page describes how to work with content sources in a docsmobile-powered site. By the end you'll understand how to configure local and remote folders of content.\"),\"\\n\",n().createElement(o.h2,{id:\"diagram\"},\"Diagram\"),\"\\n\",n().createElement(l,{id:\"JY4fbWu5M19vBZv3Sn2uk7\",ratioWidth:3,ratioHeight:2}),\"\\n\",n().createElement(o.h2,{id:\"loading-content-through-sourcesjson\"},\"Loading content through sources.json\"),\"\\n\",n().createElement(o.p,null,\"Your docsmobile-powered site loads in content from a special configuration file called \",n().createElement(o.code,{display:\"inline\"},\"sources.json\"),\", located in the root directory of your site. Below is an example of a configuration with a few different sources.\"),\"\\n\",n().createElement(o.pre,null,n().createElement(o.code,{className:\"language-json\",display:\"block\"},'{\\n  \"sources\": [\\n    {\\n      \"type\": \"file\",\\n      \"location\": \"../content\"\\n    },\\n    {\\n      \"type\": \"github\",\\n      \"location\": \"elastic/kibana\",\\n      \"branch\": \"v8.1\"\\n    },\\n    {\\n      \"type\": \"github\",\\n      \"location\": \"elastic/docsmobile\",\\n      \"subdirs\": [\"doc-site\"]\\n    }\\n  ]\\n}\\n')),\"\\n\",n().createElement(o.p,null,\"The above config will pull from three sources, a local \",n().createElement(o.code,{display:\"inline\"},\"/content/\"),\" folder in the site repo, and then from two remote Github repositories. Note the values you can pass below:\"),\"\\n\",n().createElement(o.table,null,n().createElement(o.thead,null,n().createElement(o.tr,null,n().createElement(o.th,null,\"key\"),n().createElement(o.th,null,\"value\"),n().createElement(o.th,null,\"comments\"))),n().createElement(o.tbody,null,n().createElement(o.tr,null,n().createElement(o.td,null,n().createElement(o.code,{display:\"inline\"},\"type\")),n().createElement(o.td,null,n().createElement(o.code,{display:\"inline\"},\"file\"),\" or \",n().createElement(o.code,{display:\"inline\"},\"github\")),n().createElement(o.td,null,\"Defines whether the location is remote or local\")),n().createElement(o.tr,null,n().createElement(o.td,null,n().createElement(o.code,{display:\"inline\"},\"location\")),n().createElement(o.td,null,n().createElement(o.code,{display:\"inline\"},\"string\")),n().createElement(o.td,null,\"A repo name or filepath relative to the site.\")),n().createElement(o.tr,null,n().createElement(o.td,null,n().createElement(o.code,{display:\"inline\"},\"branch\"),\" (optional)\"),n().createElement(o.td,null,n().createElement(o.code,{display:\"inline\"},\"string\"),\" or \",n().createElement(o.code,{display:\"inline\"},\"Array<string>\")),n().createElement(o.td,null,\"Specifies what branch you want (if other than the default) or a list of branches that you want. Branches are interchangeable with tags here.\")),n().createElement(o.tr,null,n().createElement(o.td,null,n().createElement(o.code,{display:\"inline\"},\"subdirs\"),\" (optional)\"),n().createElement(o.td,null,n().createElement(o.code,{display:\"inline\"},\"Array<string>\")),n().createElement(o.td,null,\"Allow-list of directories to pull from\")))),\"\\n\",n().createElement(o.p,null,\"If pointing to a remote repository, the docsmobile system will clone that repo on startup. When working with the \",n().createElement(o.code,{display:\"inline\"},\"file\"),\" type, any changes you make in that directory should be picked up and show up in your site.\"),\"\\n\",n().createElement(o.h2,{id:\"working-locally-with-sources-devjson\"},\"Working locally with sources-dev.json\"),\"\\n\",n().createElement(o.p,null,\"Similar to the above you can set up a \",n().createElement(o.code,{display:\"inline\"},\"sources-dev.json\"),\" file in your root directory. This file will take precedence when you start your docs site in \",n().createElement(o.code,{display:\"inline\"},\"yarn dev\"),\" mode. A common scenario for local development is that you point at \",n().createElement(o.code,{display:\"inline\"},\"file\"),\" type sibling directories that you have locally cloned instead of remote Github repos. When running \",n().createElement(o.code,{display:\"inline\"},\"yarn build\"),\" or running in production mode, the \",n().createElement(o.code,{display:\"inline\"},\"sources.json\"),\" file will always be used.\"),\"\\n\",n().createElement(o.h2,{id:\"custom-tsx-pages\"},\"Custom TSX pages\"),\"\\n\",n().createElement(o.p,null,\"Beyond using the MDX pages, you can optionally create your own custom pages using typical React TSX files. Simply create a dir in your primary site repo called \",n().createElement(o.code,{display:\"inline\"},\"/pages/\"),\" and any pages you add with replicate the file-path as a page slug. This uses the \",n().createElement(o.a,{href:\"https://nextjs.org/docs/basic-features/pages\"},\"Next.js page concept\"),\" under the hood.\"),\"\\n\",n().createElement(o.h3,{id:\"example-replacing-the-home-page\"},\"Example: replacing the home page\"),\"\\n\",n().createElement(o.p,null,\"To create a custom homepage for your docsmobile-powered site would create a \",n().createElement(o.code,{display:\"inline\"},\"/pages/index.tsx\"),\" file. These files work like any other TypeScript template file and can include state, interaction and imports of any components you need.\"),\"\\n\",n().createElement(o.p,null,\"In order to use components in our system (for now) to build up your page, your import will look something like this:\"),\"\\n\",n().createElement(a,{title:\"Due to the way the build works, imports of Docsmobile components are a little irregular and need to be ignored by TypeScript. This will be fixed soon.\",color:\"warning\"}),\"\\n\",n().createElement(o.pre,null,n().createElement(o.code,{className:\"language-tsx\",display:\"block\"},'import { EuiText } from \"@elastic/eui\";\\n// @ts-ignore\\nimport { BaseLayout } from \"@elastic/docsmobile/components/layouts/base_layout\";\\n// @ts-ignore\\nimport { DocLink } from \"@elastic/docsmobile/components/doc_link\";\\n\\nexport const Index: FunctionComponent = () => {\\n  return (\\n    <BaseLayout>\\n      <EuiText>\\n        <p>My custom homepage content will now be surrounded by the usual header and footer.</p>\\n        <p>I can still mix in Docsmobile components like a <DocLink id=\"somePageId\" /></p>\\n      </EuiText>\\n    </BaseLayout>\\n  );\\n}\\n\\nexport default Index;\\n')),\"\\n\",n().createElement(o.h2,{id:\"troubleshooting\"},\"Troubleshooting\"),\"\\n\",n().createElement(o.ul,null,\"\\n\",n().createElement(o.li,null,\"Changes to sources and \",n().createElement(o.code,{display:\"inline\"},\"/pages/\"),\" only happen when you restart the server.\"),\"\\n\",n().createElement(o.li,null,\"Because of a bug in docsmobile (as of March 08, 2021) the \",n().createElement(o.code,{display:\"inline\"},\"location\"),\" for \",n().createElement(o.code,{display:\"inline\"},\"file\"),\" types needs to be one level higher than you'd expect. This usually means appending an extra \",n().createElement(o.code,{display:\"inline\"},\"../\"),\" to the path then you'd expect.\"),\"\\n\"))}};function r(e,t){throw new Error(\"Expected \"+(t?\"component\":\"object\")+\" `\"+e+\"` to be defined: you likely forgot to import, pass, or provide it.\")}})(),a})()));","frontmatter":{"id":"docsSources","slug":"/docs/sources","title":"Content sources","image":"https://source.unsplash.com/400x175/?Nature","description":"How to add new docs into and remove docs from a docsmobile site","date":"2022-03-08T00:00:00.000Z","tags":["installation","docs"],"link":"https://github.com/elastic/docsmobile/doc-site/blob/main","linkPath":"docs/docs_sources.mdx"},"missionId":"krVideos"},"__N_SSG":true}