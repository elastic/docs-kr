{"pageProps":{"bundle":"!function(e,n){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=n(require(\"mdxJsReact\"),require(\"React\")):\"function\"==typeof define&&define.amd?define([\"mdxJsReact\",\"React\"],n):\"object\"==typeof exports?exports.MDXContent=n(require(\"mdxJsReact\"),require(\"React\")):e.MDXContent=n(e.mdxJsReact,e.React)}(this,((e,n)=>(()=>{\"use strict\";var t={24:e=>{e.exports=n},825:n=>{n.exports=e}},l={};function o(e){var n=l[e];if(void 0!==n)return n.exports;var r=l[e]={exports:{}};return t[e](r,r.exports,o),r.exports}o.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return o.d(n,{a:n}),n},o.d=(e,n)=>{for(var t in n)o.o(n,t)&&!o.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:n[t]})},o.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),o.r=e=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})};var r={};return(()=>{o.r(r),o.d(r,{default:()=>l});var e=o(825),n=o(24),t=o.n(n);const l=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},l=Object.assign({},(0,e.useMDXComponents)(),n.components),o=l.wrapper;return o?t().createElement(o,n,t().createElement(r)):r();function r(){var l=Object.assign({h2:\"h2\",p:\"p\",ol:\"ol\",li:\"li\",code:\"code\",ul:\"ul\",a:\"a\",h3:\"h3\",pre:\"pre\",strong:\"strong\"},(0,e.useMDXComponents)(),n.components),o=l.DocLink;return o||a(\"DocLink\",!0),t().createElement(t().Fragment,null,t().createElement(l.h2,{id:\"first-steps\"},\"First steps\"),\"\\n\",t().createElement(l.p,null,\"If you're having an issue not explicitly listed on this page, and it's only happening locally, follow these instructions.\"),\"\\n\",t().createElement(l.ol,null,\"\\n\",t().createElement(l.li,null,\"Run \",t().createElement(l.code,{display:\"inline\"},\"git status\"),\" -- do you have any changes?\",\"\\n\",t().createElement(l.ul,null,\"\\n\",t().createElement(l.li,null,\"If you do, let's start clean: \",t().createElement(l.code,{display:\"inline\"},\"git stash\"),\" (\",t().createElement(l.a,{href:\"https://git-scm.com/docs/git-stash\"},\"read more about git stash\"),\").\"),\"\\n\"),\"\\n\"),\"\\n\",t().createElement(l.li,null,\"Run \",t().createElement(l.code,{display:\"inline\"},\"node --version\"),\" -- this version should match the version listed in \",t().createElement(l.a,{href:\"https://github.com/elastic/elastic-docs/blob/master/.nvmrc\"},\".nvmrc\"),\".\",\"\\n\",t().createElement(l.ul,null,\"\\n\",t().createElement(l.li,null,\"If it doesn't, and you're using nvm, run \",t().createElement(l.code,{display:\"inline\"},\"nvm use\"),\".\"),\"\\n\",t().createElement(l.li,null,\"If you're not using nvm or any node version manager, it is suggested! It makes jumping between projects that use different node versions really easy. See \",t().createElement(l.a,{href:\"https://github.com/nvm-sh/nvm#installing-and-updating\"},\"these instructions\"),\" for getting started with nvm.\"),\"\\n\"),\"\\n\"),\"\\n\",t().createElement(l.li,null,\"Alright, so you have the correct node version and a clean git state. Let's clean out the cache by running \",t().createElement(l.code,{display:\"inline\"},\"rm -rf .cache\"),\".\"),\"\\n\",t().createElement(l.li,null,\"Now clean out your node_modules with \",t().createElement(l.code,{display:\"inline\"},\"rm -rf node_modules\"),\".\"),\"\\n\",t().createElement(l.li,null,\"Let's reinstall your node_modules now that we're on the right node version: \",t().createElement(l.code,{display:\"inline\"},\"yarn\"),\".\"),\"\\n\",t().createElement(l.li,null,\"Finally, \",t().createElement(l.code,{display:\"inline\"},\"yarn dev\"),\" -- are you still getting errors? Then jump into #next-docs in slack and we'd love to help you!\"),\"\\n\"),\"\\n\",t().createElement(l.h2,{id:\"setup-issues\"},\"Setup issues\"),\"\\n\",t().createElement(l.p,null,\"The problems in this section occur when you try to start the docs system.\"),\"\\n\",t().createElement(l.h3,{id:\"sso-errors\"},\"SSO errors\"),\"\\n\",t().createElement(l.p,null,\"If you receive an error message like this when you start the docs system:\"),\"\\n\",t().createElement(l.pre,null,t().createElement(l.code,{className:\"language-shell\",display:\"block\"},\"remote: The `elastic' organization has enabled or enforced SAML SSO. To access\\nremote: this repository, visit https://github.com/orgs/elastic/sso... and try your request again.\\n\")),\"\\n\",t().createElement(l.p,null,\"This problem can occur if your GitHub token isn't authorized to work with SSO.\"),\"\\n\",t().createElement(l.p,null,\"In GitHub, go to \",t().createElement(l.a,{href:\"https://github.com/settings/tokens\"},\"Settings> Developer settings > Personal access tokens\"),\". Click \",t().createElement(l.strong,null,\"Enable SSO\"),\" beside the token that you use in the docs system.\"),\"\\n\",t().createElement(l.h3,{id:\"node-modules-errors\"},\"Node modules errors\"),\"\\n\",t().createElement(l.p,null,\"If you get a build error referencing \",t().createElement(l.code,{display:\"inline\"},\"node_modules\"),\", there's likely an issue\\nwith your local \",t().createElement(l.code,{display:\"inline\"},\"node_modules\"),\" directory.\"),\"\\n\",t().createElement(l.p,null,\"To fix the error, run the following commands one at a time, in order.\"),\"\\n\",t().createElement(l.ol,null,\"\\n\",t().createElement(l.li,null,\"cd into your local \",t().createElement(l.code,{display:\"inline\"},\"elastic-docs\"),\" repo.\"),\"\\n\",t().createElement(l.li,null,\"Pull the latest changes from \",t().createElement(l.code,{display:\"inline\"},\"master\"),\" branch of the \",t().createElement(l.code,{display:\"inline\"},\"elastic/elastic-docs\"),\" repo.\"),\"\\n\",t().createElement(l.li,null,\"Run \",t().createElement(l.code,{display:\"inline\"},\"rm -rf .cache\"),\".\"),\"\\n\",t().createElement(l.li,null,\"Run \",t().createElement(l.code,{display:\"inline\"},\"rm -rf node_modules\"),\".\"),\"\\n\",t().createElement(l.li,null,\"Run \",t().createElement(l.code,{display:\"inline\"},\"yarn\"),\" and then \",t().createElement(l.code,{display:\"inline\"},\"yarn dev\"),\".\"),\"\\n\"),\"\\n\",t().createElement(l.h3,{id:\"missing-module-errors\"},\"Missing module errors\"),\"\\n\",t().createElement(l.p,null,\"If you get a build error because of a missing module like this one, run \",t().createElement(l.code,{display:\"inline\"},\"yarn\"),\" again from the root of the elastic-docs repo to pick up and install the missing module dependency:\"),\"\\n\",t().createElement(l.pre,null,t().createElement(l.code,{className:\"language-shell\",display:\"block\"},\"ERROR #11321  PLUGIN\\n\\n\\\"micromark-extension-mdxjs\\\" threw an error while running the sourceNodes lifecycle:\\n\\nCannot find module 'micromark-extension-mdxjs'\\n\")),\"\\n\",t().createElement(l.p,null,\"You might run into this scenario when you've pulled down the latest files but haven't tested in a while.\"),\"\\n\",t().createElement(l.h2,{id:\"content-issues\"},\"Content issues\"),\"\\n\",t().createElement(l.p,null,\"The problems in this section occur when you've created or updated a page and\\nit's not displaying properly in the docs system.\"),\"\\n\",t().createElement(l.h3,{id:\"updates-not-reflected-in-your-local-environment\"},\"Updates not reflected in your local environment\"),\"\\n\",t().createElement(l.p,null,\"If you're making changes to files in your local (development) sources and you\\ndon't see those changes reflected in the browser when you refresh the page,\\ncheck your \",t().createElement(l.code,{display:\"inline\"},\"sources-dev.json\"),\" file. You must use a \",t().createElement(l.code,{display:\"inline\"},'\"type\": \"file\"'),\" for\\nyour local changes to be picked up and the \",t().createElement(l.code,{display:\"inline\"},'\"location\"'),\" must be a path that is\\nrelative to the location of the Elastic docs system.\"),\"\\n\",t().createElement(l.p,null,'If you accidentally have the same source twice in your json file (e.g. both as\\na \"file\" and \"github\" type of source), this also can cause your changes to be\\nunheeded.'),\"\\n\",t().createElement(l.h3,{id:\"curly-brackets-cause-page-failure\"},\"Curly brackets cause page failure\"),\"\\n\",t().createElement(l.p,null,\"If you receive an error like this when navigating to a documentation page:\"),\"\\n\",t().createElement(l.pre,null,t().createElement(l.code,{className:\"language-js\",display:\"block\"},\"TypeError: Cannot read property 'getElementsByTagName' of null\\n\")),\"\\n\",t().createElement(l.p,null,\"or\"),\"\\n\",t().createElement(l.pre,null,t().createElement(l.code,{className:\"language-js\",display:\"block\"},\"ReferenceError: n is not defined\\n\")),\"\\n\",t().createElement(l.p,null,\"This problem can occur when the doc page has curly brackets \",t().createElement(l.code,{display:\"inline\"},\"{any_text_here}\"),\"\\nthat are not in a code snippet. In particular, this happens when you copy\\ncontent that contained shared attributes in the old documentation system.\\nRemove the curly brackets (or replace the shared attribute with the appropriate\\ntext) and refresh the page to fix the problem.\"),\"\\n\",t().createElement(l.h3,{id:\"asciidoc-internal-links-cause-page-failure\"},\"Asciidoc internal links cause page failure\"),\"\\n\",t().createElement(l.p,null,\"If your page contains links that were created for Asciidoc (also known as cross\\nreferences), they do not work in this docs system.\"),\"\\n\",t().createElement(l.p,null,\"For example, \",t().createElement(l.code,{display:\"inline\"},\"<<test>>\"),\" results in the following error when you try to load the\\npage:\"),\"\\n\",t().createElement(l.pre,null,t().createElement(l.code,{className:\"language-js\",display:\"block\"},\"TypeError:Cannot read property 'frontmatter'of null\\n\")),\"\\n\",t().createElement(l.p,null,\"To fix this situation, use the appropriate syntax per\\n\",t().createElement(o,{id:\"docsSyntax\",section:\"links\"}),\".\"),\"\\n\",t().createElement(l.h3,{id:\"the-github-link-doesnt-seem-right\"},\"The GitHub link doesn't seem right\"),\"\\n\",t().createElement(l.p,null,'If the \"Edit this page on GitHub\" link isn\\'t linking you to the right place, check your ',t().createElement(l.code,{display:\"inline\"},\"sources-dev.json\"),'. If you are pointing at local docs, this is a known, and currently accepted, issue. Our \"Edit this page on GitHub\" only works if you\\'re pointing at a repo. If this is blocking for you, please ',t().createElement(l.a,{href:\"https://github.com/elastic/elastic-docs/issues\"},\"file a bug in our elastic-docs repo\"),\".\"),\"\\n\",t().createElement(l.h3,{id:\"bad-link-and-404-errors\"},\"Bad link and 404 errors\"),\"\\n\",t().createElement(l.p,null,'If you try to view your content locally and you encounter \"bad link\" or\\n\"There\\'s not a page yet at... Preview custom 404 page\" messages, first verify\\nthat the problematic page does indeed exist in your repo.'),\"\\n\",t().createElement(l.p,null,\"If the page does exist but it's being pulled from a repo with a lot of folders\\nand files, you might be able to work around the problem by narrowing the scope\\nof your local (development) sources. For example, instead of pulling in the\\nfull kibana repo in your \",t().createElement(l.code,{display:\"inline\"},\"sources-dev.json\"),\" file, use a subset like this:\"),\"\\n\",t().createElement(l.pre,null,t().createElement(l.code,{className:\"language-js\",display:\"block\"},'{\\n  \"type\": \"file\",\\n  \"location\": \"../kibana/dev_docs\"\\n},\\n{\\n  \"type\": \"file\",\\n  \"location\": \"../kibana/src/plugins/data\"\\n}\\n')),\"\\n\",t().createElement(l.p,null,\"This is a temporary limitation.\"),\"\\n\",t().createElement(l.h2,{id:\"debugging\"},\"Debugging\"),\"\\n\",t().createElement(l.p,null,\"Next.js makes it really easy to attach a \",t().createElement(l.a,{href:\"https://nextjs.org/docs/advanced-features/debugging\"},\"debugger\"),\" when you're working on the\\ncode of the system. To start the code with debugging enabled, run \",t().createElement(l.code,{display:\"inline\"},\"yarn debug\"),\".\\nNote that this assumes you have already cloned the content repos at least once\\n(\",t().createElement(l.code,{display:\"inline\"},\"NODE_ENV=development yarn clone-sources\"),\").\"),\"\\n\",t().createElement(l.p,null,'If you use VS Code, you can then use the \"Connect Debugger\" launch target (under\\nthe \"Run and Debug\" pane) to connect to the running dev server.'))}};function a(e,n){throw new Error(\"Expected \"+(n?\"component\":\"object\")+\" `\"+e+\"` to be defined: you likely forgot to import, pass, or provide it.\")}})(),r})()));","frontmatter":{"id":"docsTroubleshooting","slug":"/docs/troubleshooting","title":"Troubleshooting build errors","description":"How to debug problems in the docs system.","date":"2021-07-14T00:00:00.000Z","tags":["troubleshoot","docs"],"link":"https://github.com/elastic/docsmobile/doc-site/blob/main","linkPath":"docs/docs_troubleshooting.mdx"},"missionId":"krVideos"},"__N_SSG":true}