{"pageProps":{"bundle":"!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t(require(\"mdxJsReact\"),require(\"React\")):\"function\"==typeof define&&define.amd?define([\"mdxJsReact\",\"React\"],t):\"object\"==typeof exports?exports.MDXContent=t(require(\"mdxJsReact\"),require(\"React\")):e.MDXContent=t(e.mdxJsReact,e.React)}(this,((e,t)=>(()=>{\"use strict\";var n={24:e=>{e.exports=t},825:t=>{t.exports=e}},l={};function a(e){var t=l[e];if(void 0!==t)return t.exports;var i=l[e]={exports:{}};return n[e](i,i.exports,a),i.exports}a.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return a.d(t,{a:t}),t},a.d=(e,t)=>{for(var n in t)a.o(t,n)&&!a.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},a.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),a.r=e=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})};var i={};return(()=>{a.r(i),a.d(i,{default:()=>l});var e=a(825),t=a(24),n=a.n(t);const l=function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},l=Object.assign({},(0,e.useMDXComponents)(),t.components),a=l.wrapper;return a?n().createElement(a,t,n().createElement(i)):i();function i(){var l=Object.assign({p:\"p\",a:\"a\",h2:\"h2\",strong:\"strong\",code:\"code\",pre:\"pre\",blockquote:\"blockquote\",em:\"em\",h3:\"h3\",ul:\"ul\",li:\"li\",span:\"span\"},(0,e.useMDXComponents)(),t.components);return n().createElement(n().Fragment,null,n().createElement(l.p,null,\"A guide to running your first build in \",n().createElement(l.a,{href:\"https://buildkite.com/elastic\"},\"Elastic's Buildkite CI/CD environment\"),\".\"),\"\\n\",n().createElement(l.h2,{id:\"overview\"},\"Overview\"),\"\\n\",n().createElement(l.p,null,'This document is a \"getting started\" tutorial, and has an accompanying ',n().createElement(l.a,{href:\"https://github.com/elastic/buildkite-example\"},\"example\\nrepository\"),\".\"),\"\\n\",n().createElement(l.p,null,\"Forking a repository currently is not supported, so feel free to clone the\\nexample repo and follow along. If you do, please create a branch for yourself,\\nincluding your username in the branch name.\"),\"\\n\",n().createElement(l.p,null,\"This documentation is meant to supplement the excellent documentation available\\nat \",n().createElement(l.a,{href:\"https://buildkite.com/docs/\"},\"buildkite.com/docs\"),\", and highlight some \",n().createElement(l.strong,null,\"Elastic-specific\"),\" features.\"),\"\\n\",n().createElement(l.h2,{id:\"create-a-pipeline\"},\"Create a Pipeline\"),\"\\n\",n().createElement(l.p,null,\"To create a new Buildkite pipeline, declare it in \",n().createElement(l.a,{href:\"https://github.com/elastic/ci/blob/main/terraform/cdktf/env/buildkite-pipelines/buildkite-pipelines-prod.yml\"},\"this configuration\\nfile\"),\".\"),\"\\n\",n().createElement(l.p,null,\"Add an entry to the \",n().createElement(l.code,{display:\"inline\"},\"pipelines\"),\" section specifying the GitHub repository and\\ndefault branch:\"),\"\\n\",n().createElement(l.pre,null,n().createElement(l.code,{className:\"language-yaml\",display:\"block\"},\"pipelines:\\n  Buildkite Example: # The name of our pipeline as seen in the Buildkite UI.\\n    repository: elastic/buildkite-example # Repo organization/name.\\n    default_branch: main # The default branch for the repo.\\n\")),\"\\n\",n().createElement(l.h2,{id:\"assign-the-pipeline-to-teams-optional\"},\"Assign the Pipeline to teams [optional]\"),\"\\n\",n().createElement(l.p,null,\"If access to the pipeline should be restricted to specific Buildkite teams,\\nthen a \",n().createElement(l.code,{display:\"inline\"},\"teams\"),\" section can be added to the pipeline's yaml declaration:\"),\"\\n\",n().createElement(l.pre,null,n().createElement(l.code,{className:\"language-yaml\",display:\"block\"},\"pipelines:\\n  Buildkite Example With Team Restriction:\\n    repository: elastic/elasticsearch-team-secret-pipeline\\n    default_branch: main\\n    teams:\\n      elasticsearch: {}\\n\")),\"\\n\",n().createElement(l.blockquote,null,\"\\n\",n().createElement(l.p,null,\":warning: Buildkite teams correlate one-to-one with GitHub teams. Therefore,\\nany team declared in this way must already exist in GitHub with exactly the\\nsame name (case sensitive). Also, it must be different from the pipeline's name.\"),\"\\n\"),\"\\n\",n().createElement(l.p,null,\"By default, declaring a team for a pipeline grants that team full control and\\nlocks everybody else out. Restricted permissions can be granted to other teams\\n(or everyone in the company) like this:\"),\"\\n\",n().createElement(l.pre,null,n().createElement(l.code,{className:\"language-yaml\",display:\"block\"},'[...]\\n    teams:\\n      elasticsearch: {}\\n      kibana: \\n        access_level: BUILD_AND_READ\\n      everyone: {\"access_level\": \"READ_ONLY\"}\\n')),\"\\n\",n().createElement(l.h2,{id:\"add-the-repository-to-reference-repositories\"},\"Add The Repository to Reference Repositories\"),\"\\n\",n().createElement(l.p,null,\"To avoid downloading repositories in each build, add the repository to the list\\nof \",n().createElement(l.a,{href:\"https://github.com/elastic/ci/blob/\"},\"git reference repos\"),\".\"),\"\\n\",n().createElement(l.h2,{id:\"raise-a-pull-request\"},\"Raise a Pull Request\"),\"\\n\",n().createElement(l.p,null,\"When the changes from the above steps are merged, your pipeline will be created.\"),\"\\n\",n().createElement(l.h2,{id:\"add-pipeline-steps\"},'Add Pipeline \"Steps\"'),\"\\n\",n().createElement(l.p,null,\"At this stage, the pipeline exists, but does not have any work to do. In\\nBuildkite-speak, it is now time to define the pipeline \",n().createElement(l.a,{href:\"https://buildkite.com/docs/pipelines/defining-steps#adding-steps\"},n().createElement(l.em,null,\"steps\")),\".\"),\"\\n\",n().createElement(l.p,null,\"For doing that, create a \",n().createElement(l.a,{href:\"https://buildkite.com/docs/pipelines/defining-steps#step-defaults-pipeline-dot-yml-file\"},\"pipeline.yml\"),\" file representing the actual work to be\\ndone, and save it inside a \",n().createElement(l.code,{display:\"inline\"},\"$REPOSITORY/.builkite\"),\" directory which is the expected\\ndefault configuration.\"),\"\\n\",n().createElement(l.p,null,\"Beware, from here on, all changes happen in your own source repository.\"),\"\\n\",n().createElement(l.p,null,\"The following section shows an example of how to configure it.\"),\"\\n\",n().createElement(l.h3,{id:\"create-buildkite-directory\"},\"Create \",n().createElement(l.code,{display:\"inline\"},\".buildkite\"),\" Directory\"),\"\\n\",n().createElement(l.p,null,\"Before getting started with a pipeline.yml file, you will need to tell Buildkite\\nwhere it will be able to find your steps.\"),\"\\n\",n().createElement(l.p,null,\"To try it, create the \",n().createElement(l.code,{display:\"inline\"},\"$REPOSITORY/.buildkite\"),\" directory and \",n().createElement(l.code,{display:\"inline\"},\"$REPOSITORY/.buildkite/pipeline.yml\"),\"\\nfile with the following contents:\"),\"\\n\",n().createElement(l.pre,null,n().createElement(l.code,{className:\"language-yaml\",display:\"block\"},'steps:\\n  - label: \":wave: Greetings\" # Label and optional emoji https://github.com/buildkite/emojis.\\n    command: \"echo \\'My first pipeline!\\'\" # Command step that can run either a shell command, or an executable file or script.\\n')),\"\\n\",n().createElement(l.p,null,\"Then, commit and push your changes to your branch and then head over to\\n\",n().createElement(l.a,{href:\"https://buildkite.com/elastic/buildkite-example\"},\"buildkite.com/elastic/buildkite-example\"),\" to see the pipeline run in CI.\"),\"\\n\",n().createElement(l.h3,{id:\"select-an-agent-image\"},\"Select an Agent Image\"),\"\\n\",n().createElement(l.p,null,\"By default, jobs run as containers on Kubernetes. You can specify any container\\nimage to run your builds, but some requirements must be met. To work as a\\nBuildkite agent, your container image must contain runnable copies of:\"),\"\\n\",n().createElement(l.ul,null,\"\\n\",n().createElement(l.li,null,n().createElement(l.code,{display:\"inline\"},\"git\")),\"\\n\",n().createElement(l.li,null,n().createElement(l.code,{display:\"inline\"},\"ssh\")),\"\\n\",n().createElement(l.li,null,n().createElement(l.code,{display:\"inline\"},\"ssh-keyscan\"),\" (usually provided with \",n().createElement(l.code,{display:\"inline\"},\"ssh\"),\").\"),\"\\n\"),\"\\n\",n().createElement(l.blockquote,null,\"\\n\",n().createElement(l.p,null,\":warning: Many popular off-the-shelf images, like \",n().createElement(l.code,{display:\"inline\"},\"ubuntu:20.04\"),\" do not\\ncontain these binaries. Check \",n().createElement(l.a,{href:\"https://github.com/elastic/buildkite-example/blob/main/.buildkite/agents/Dockerfile\"},\"this link\"),\" to see an example.\"),\"\\n\"),\"\\n\",n().createElement(l.h3,{id:\"create-a-custom-image-optional\"},\"Create a Custom Image [optional]\"),\"\\n\",n().createElement(l.p,null,'Often, you will want to create a custom agent image. You may need to add the\\nrequirements shown above, or do more extensive preparation to create an image\\nthat is \"just right\" for your job.'),\"\\n\",n().createElement(l.blockquote,null,\"\\n\",n().createElement(l.p,null,\":bulb: While you can use any method you like to build and push custom images,\\nwe recommend taking advantage of the \",n().createElement(l.a,{href:\"https://github.com/elastic/ci-agent-images\"},\"ci-agent-images\"),\" automated build system.\\nThis is a highly automated pipeline for producing custom images. In short, you\\ncan commit a \",n().createElement(l.code,{display:\"inline\"},\"Dockerfile\"),\" and an accompanying configuration file for your image,\\nand then expect to have your image automatically built and pushed to\\n\",n().createElement(l.code,{display:\"inline\"},\"docker.elastic.co\"),\".\"),\"\\n\"),\"\\n\",n().createElement(l.p,null,\"The following example shows how to tell the pipeline to use your custom image:\"),\"\\n\",n().createElement(l.pre,null,n().createElement(l.code,{className:\"language-yaml\",display:\"block\"},'---\\nsteps:\\n  - label: \":wave: Greetings\" # Label and optional emoji https://github.com/buildkite/emojis.\\n    command: \"hello.sh\" # The script to run.\\n    agents:\\n      image: \"docker.elastic.co/employees/itsmed/buildkite-agent-example\" # The custom image\\'s location.\\n')),\"\\n\",n().createElement(l.h2,{id:\"use-docker\"},\"Use Docker\"),\"\\n\",n().createElement(l.p,null,\"Since container management is not supported in the Kubernetes offering, in order\\nto use \",n().createElement(l.code,{display:\"inline\"},\"docker-like\"),\" commands, you need to use a GCE based agent.\"),\"\\n\",n().createElement(l.p,null,\"To achieve that, update the \",n().createElement(l.code,{display:\"inline\"},\"agents.provider\"),\" step proviging the \",n().createElement(l.code,{display:\"inline\"},\"gcp\"),\" value\\ninstead of \",n().createElement(l.code,{display:\"inline\"},\"agents.image\"),\" entry in your \",n().createElement(l.code,{display:\"inline\"},\"pipeline.yml\"),\" or check the\\n\",n().createElement(l.a,{href:\"https://github.com/elastic/buildkite-example/blob/gcp-agent-with-vault/.buildkite/pipeline.yml\"},\"gcp-agent-with-vault branch\"),\" for example:\"),\"\\n\",n().createElement(l.pre,null,n().createElement(l.code,{className:\"language-yaml\",display:\"block\"},'---\\n\\nsteps:\\n  - label: \":wave: Greetings\"\\n    command: \"hello.sh\"\\n    agents:\\n      provider: \"gcp\"\\n')),\"\\n\",n().createElement(l.h2,{id:\"use-vault\"},\"Use Vault\"),\"\\n\",n().createElement(l.p,null,\"When you raise a Pull Request to add your pipeline in Buildkite described before,\\nthe Vault policy required by the repository is requested.\"),\"\\n\",n().createElement(l.p,null,\"Once these resources gets created, you will have \",n().createElement(l.code,{display:\"inline\"},\"read\"),\"/\",n().createElement(l.code,{display:\"inline\"},\"write\"),\" access to your\\nsecrets created under the \",n().createElement(l.code,{display:\"inline\"},\"secret/ci/$GITHUB_ORGANIZATION-$REPOSITORY_NAME\"),\" path\\nstructure.\"),\"\\n\",n().createElement(l.p,null,\"For instance, the \",n().createElement(l.code,{display:\"inline\"},\"secret/ci/elastic-buildkite-example\"),\" path stores secrets\\nfor the \",n().createElement(l.code,{display:\"inline\"},\"buildkite-example\"),\" repository.\"),\"\\n\",n().createElement(l.p,null,\"You can follow the next intructions to read a secret using the \",n().createElement(l.code,{display:\"inline\"},\"buildkite-example\"),\"\\nrepository.\"),\"\\n\",n().createElement(l.ul,null,\"\\n\",n().createElement(l.li,null,\"Create \",n().createElement(l.code,{display:\"inline\"},\"$REPOSITORY/hello-vault.sh\"),\" with the following contents:\"),\"\\n\"),\"\\n\",n().createElement(l.pre,null,n().createElement(l.code,{className:\"language-bash\",display:\"block\"},'#/bin/bash\\n\\nmessage=$(vault read -field=message secret/ci/elastic-buildkite-example/vault-secret)\\n\\necho \"$message\"\\n\\n')),\"\\n\",n().createElement(l.ul,null,\"\\n\",n().createElement(l.li,null,\"Update the \",n().createElement(l.code,{display:\"inline\"},\"pipeline.yml\"),\" command step value specifying your Vault script:\"),\"\\n\"),\"\\n\",n().createElement(l.pre,null,n().createElement(l.code,{className:\"language-yaml\",display:\"block\"},'steps:\\n  - label: \":wave: Greetings\"\\n    command: \"hello-vault.sh\"\\n')),\"\\n\",n().createElement(l.ul,null,\"\\n\",n().createElement(l.li,null,\"Commit and push your changes to your branch and then head over to\\n\",n().createElement(l.a,{href:\"https://buildkite.com/elastic/buildkite-example\"},\"buildkite.com/elastic/buildkite-example\"),\" to see the pipeline run in CI.\"),\"\\n\"),\"\\n\",n().createElement(l.h3,{id:\"migrating-your-secrets-to-the-new-vault-location\"},\"Migrating Your Secrets to the New Vault Location\"),\"\\n\",n().createElement(l.p,null,\"You will likely want to copy some secrets from an existing Vault location to\\n\",n().createElement(l.code,{display:\"inline\"},\"secret/ci/$GITHUB_ORGANIZATION-$REPO_NAME\"),\".\"),\"\\n\",n().createElement(l.p,null,\"To help you with the above, you can use the \",n().createElement(l.code,{display:\"inline\"},\"vault-cp\"),\" utility script that is\\npart of the larger \",n().createElement(l.code,{display:\"inline\"},\"infra-vault-tools\"),\" package. Installation instructions are\\n\",n().createElement(l.a,{href:\"https://github.com/elastic/infra/tree/a4448e94d8e58a340a225d42c510cf396e3c7d8d/flavortown/infra-vault-tools#installing\"},\"here\"),\".\"),\"\\n\",n().createElement(l.p,null,\"It is just a shell script, so if you'd rather not install the whole\\n\",n().createElement(l.code,{display:\"inline\"},\"infra-vault-tools\"),\" package, you can pretty easily \",n().createElement(l.a,{href:\"https://github.com/elastic/infra/blob/a4448e94d8e58a340a225d42c510cf396e3c7d8d/flavortown/infra-vault-tools/infra_vault_tools/shell_commands/vault-cp.sh\"},\"copy the script\"),\" into an\\nexecutable shell file somewhere on your \",n().createElement(l.code,{display:\"inline\"},\"PATH\"),\" and use it direclty.\"),\"\\n\",n().createElement(l.p,null,\"You will also find, in the \",n().createElement(l.code,{display:\"inline\"},\"infra-vault-tools\"),\", a \",n().createElement(l.a,{href:\"https://github.com/elastic/infra/blob/a4448e94d8e58a340a225d42c510cf396e3c7d8d/flavortown/infra-vault-tools/infra_vault_tools/shell_commands/vault-append.sh\"},n().createElement(l.code,{display:\"inline\"},\"vault-append\")),\" script\\nthat you can use to add new key/values to existing secrets.\"),\"\\n\",n().createElement(l.p,null,n().createElement(l.span,{role:\"img\",\"aria-label\":\"light bulb\"},\"💡\"),\" Example to come\"),\"\\n\",n().createElement(l.h2,{id:\"dynamic-pipelines\"},\"Dynamic Pipelines\"),\"\\n\",n().createElement(l.p,null,\"Buildkite has the capacity to have \",n().createElement(l.a,{href:\"https://buildkite.com/docs/pipelines/defining-steps#dynamic-pipelines\"},\"pipelines dynamically generated\"),\" by a\\nprogram written in any language that can output YAML to \",n().createElement(l.code,{display:\"inline\"},\"stdout\"),\".\"),\"\\n\",n().createElement(l.blockquote,null,\"\\n\",n().createElement(l.p,null,n().createElement(l.span,{role:\"img\",\"aria-label\":\"light bulb\"},\"💡\"),\" example to come\"),\"\\n\"),\"\\n\",n().createElement(l.h2,{id:\"multiple-steps-and-parallelization\"},\"Multiple Steps and Parallelization\"),\"\\n\",n().createElement(l.p,null,\"Head over to the \",n().createElement(l.a,{href:\"https://buildkite.com/docs/pipelines\"},\"Buildkite Pipeline documentation\"),\" to learn about using\\nPipelines and Buildkite!\"))}}})(),i})()));","frontmatter":{"id":"gettingStartedWithBuildkiteAtElastic","slug":"/ci/getting-started-with-buildkite-at-elastic","title":"Getting Started With Buildkite","summary":"Elastic CI documentation for getting started with Buildkite","date":"2022-05-09T00:00:00.000Z","tags":["ci","ci/cd","developer tools","buildkite","engineering","platform"],"link":"https://github.com/elastic/ci/blob/main","linkPath":"docs/buildkite/getting_started.mdx"},"missionId":"krVideos"},"__N_SSG":true}