{"pageProps":{"bundle":"!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t(require(\"mdxJsReact\"),require(\"React\")):\"function\"==typeof define&&define.amd?define([\"mdxJsReact\",\"React\"],t):\"object\"==typeof exports?exports.MDXContent=t(require(\"mdxJsReact\"),require(\"React\")):e.MDXContent=t(e.mdxJsReact,e.React)}(this,((e,t)=>(()=>{\"use strict\";var n={24:e=>{e.exports=t},825:t=>{t.exports=e}},o={};function l(e){var t=o[e];if(void 0!==t)return t.exports;var r=o[e]={exports:{}};return n[e](r,r.exports,l),r.exports}l.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return l.d(t,{a:t}),t},l.d=(e,t)=>{for(var n in t)l.o(t,n)&&!l.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},l.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),l.r=e=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})};var r={};return(()=>{l.r(r),l.d(r,{default:()=>o});var e=l(825),t=l(24),n=l.n(t);const o=function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},o=Object.assign({},(0,e.useMDXComponents)(),t.components),l=o.wrapper;return l?n().createElement(l,t,n().createElement(r)):r();function r(){var o=Object.assign({p:\"p\",blockquote:\"blockquote\",code:\"code\",h2:\"h2\",h3:\"h3\",a:\"a\",ul:\"ul\",li:\"li\",pre:\"pre\"},(0,e.useMDXComponents)(),t.components);return n().createElement(n().Fragment,null,n().createElement(o.p,null,\"Gobld is the utility we have written to provision workers for CI.\\nWhen making changes or adding features to Gobld it is often necessary\\nto see how these features perform in a live environment (responding to\\nwebhooks, issuing commands to Vault and Buildkite, etc).  This\\ndocument aims to explain how to run a local Gobld and have it interact\\nwith other external services.\"),\"\\n\",n().createElement(o.blockquote,null,\"\\n\",n().createElement(o.p,null,\"NOTE: The instructions below assume elevated permissions in both\\nVault (to access various secrets) and Buildkite (to access the\\n\",n().createElement(o.code,{display:\"inline\"},\"Settings\"),\" screen).\"),\"\\n\"),\"\\n\",n().createElement(o.h2,{id:\"getting-started\"},\"Getting Started\"),\"\\n\",n().createElement(o.p,null,\"There are several components to be aware of when setting this up.\"),\"\\n\",n().createElement(o.h3,{id:\"ngrok-setup\"},\"Ngrok Setup\"),\"\\n\",n().createElement(o.p,null,\"In order to receive webhooks on your local gobld you either need to\\nput your computer on the open internet or something must listen for\\nthe webhooks and forward them to you.  For this we will use \",n().createElement(o.code,{display:\"inline\"},\"ngrok\"),\".\"),\"\\n\",n().createElement(o.p,null,\"Head to \",n().createElement(o.a,{href:\"https://ngrok.com\"},\"ngrok.com\"),\", sign up, and install the\\nutility.\"),\"\\n\",n().createElement(o.p,null,\"Next, in a new terminal window, run the following:\"),\"\\n\",n().createElement(o.p,null,n().createElement(o.code,{display:\"inline\"},\"ngrok http 8080\")),\"\\n\",n().createElement(o.p,null,\"Take note of the HTTPS forwarding URL that ngrok displays as it's used below.\"),\"\\n\",n().createElement(o.h3,{id:\"buildkite-webhook-config\"},\"Buildkite webhook config\"),\"\\n\",n().createElement(o.p,null,\"To prevent the local Gobld from picking up production builds, we need\\nto first create a new webhook configuration on Buildkite.  Head over\\nto the \",n().createElement(o.code,{display:\"inline\"},\"Settings\"),\" screen for the organization on which you're planning\\nto test.  Click the \",n().createElement(o.code,{display:\"inline\"},\"Notification Services\"),\" link on the left.  That\\nshould take you to \",n().createElement(o.a,{href:\"https://buildkite.com/organizations/elastic-flavortown/services\"},\"this\\npage\"),\"\\nfor the Elastic Flavortown project, for example.\"),\"\\n\",n().createElement(o.p,null,\"Once there, click the \",n().createElement(o.code,{display:\"inline\"},\"Add\"),' button next to \"Webhook\".  On the \"Add\\nWebhook Notification\" screen, set the following:'),\"\\n\",n().createElement(o.ul,null,\"\\n\",n().createElement(o.li,null,\"Description: Something to remind you later\"),\"\\n\",n().createElement(o.li,null,\"Webhook URL: Input the ngrok URL from above and append \",n().createElement(o.code,{display:\"inline\"},\"/webhooks\"),\".\\nE.g. \",n().createElement(o.code,{display:\"inline\"},\"https://d7e8-123-12-123-123.ngrok.io/webhooks\")),\"\\n\",n().createElement(o.li,null,\"Events: Check the box next to \",n().createElement(o.code,{display:\"inline\"},\"job.scheduled\")),\"\\n\",n().createElement(o.li,null,\"Pipelines: Select \",n().createElement(o.code,{display:\"inline\"},\"Only Some Pipelines...\"),\" and select your test pipeline\"),\"\\n\",n().createElement(o.li,null,\"Branch filtering: Fill in your branch name to avoid accidentally\\npicking up stray builds.\"),\"\\n\"),\"\\n\",n().createElement(o.p,null,\"Take note of the \",n().createElement(o.code,{display:\"inline\"},\"Token\"),\" value as it will be used later.\"),\"\\n\",n().createElement(o.p,null,\"Click \",n().createElement(o.code,{display:\"inline\"},\"Save Notification Settings\")),\"\\n\",n().createElement(o.h3,{id:\"gobld\"},\"Gobld\"),\"\\n\",n().createElement(o.blockquote,null,\"\\n\",n().createElement(o.p,null,\"NOTE: You may need to edit settings in \",n().createElement(o.code,{display:\"inline\"},\"gobld.yml\"),\" in your gobld\\nsource if there are settings relevant to your development.\"),\"\\n\"),\"\\n\",n().createElement(o.p,null,\"In the shell where you'll be running gobld, \",n().createElement(o.code,{display:\"inline\"},\"cd\"),\" to the directory of\\nyour gobld source and:\"),\"\\n\",n().createElement(o.pre,null,n().createElement(o.code,{className:\"language-bash\",display:\"block\"},'env BK_WEBHOOK_TOKEN=\"<the token from the webhook step above>\" \\\\\\nmake run\\n')),\"\\n\",n().createElement(o.p,null,\"There should now be logs printing in your terminal.  If you need\\naccess to debug level logging, also:\"),\"\\n\",n().createElement(o.pre,null,n().createElement(o.code,{className:\"language-bash\",display:\"block\"},'env DEBUG=true \\\\\\nBK_WEBHOOK_TOKEN=\"<the token from the webhook step above>\" \\\\\\nmake run\\n')))}}})(),r})()));","frontmatter":{"id":"gobldLocalDevelopment","slug":"/ci/gobld/local-development","title":"Local Development","summary":"How to develop and test Gobld changes on Buildkite","date":"2022-03-24T00:00:00.000Z","tags":["ci","ci/cd","developer tools","buildkite","gobld"],"link":"https://github.com/elastic/ci/blob/main","linkPath":"docs/gobld/local-development.mdx"},"missionId":"krVideos"},"__N_SSG":true}