{"pageProps":{"bundle":"!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t(require(\"mdxJsReact\"),require(\"React\")):\"function\"==typeof define&&define.amd?define([\"mdxJsReact\",\"React\"],t):\"object\"==typeof exports?exports.MDXContent=t(require(\"mdxJsReact\"),require(\"React\")):e.MDXContent=t(e.mdxJsReact,e.React)}(this,((e,t)=>(()=>{\"use strict\";var n={24:e=>{e.exports=t},825:t=>{t.exports=e}},l={};function r(e){var t=l[e];if(void 0!==t)return t.exports;var a=l[e]={exports:{}};return n[e](a,a.exports,r),a.exports}r.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return r.d(t,{a:t}),t},r.d=(e,t)=>{for(var n in t)r.o(t,n)&&!r.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r.r=e=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})};var a={};return(()=>{r.r(a),r.d(a,{default:()=>l});var e=r(825),t=r(24),n=r.n(t);const l=function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},l=Object.assign({},(0,e.useMDXComponents)(),t.components),r=l.wrapper;return r?n().createElement(r,t,n().createElement(a)):a();function a(){var l=Object.assign({p:\"p\",br:\"br\",table:\"table\",thead:\"thead\",tr:\"tr\",th:\"th\",tbody:\"tbody\",td:\"td\",code:\"code\",a:\"a\",h2:\"h2\"},(0,e.useMDXComponents)(),t.components);return n().createElement(n().Fragment,null,n().createElement(l.p,null,\"Gobld is deployed as a Kubernetes deployment to the CI Systems GKE clusters.\",n().createElement(l.br),\"\\n\",\"The deployment and ongoing maintenance is handled by Terraform and Helm.\"),\"\\n\",n().createElement(l.p,null,\"Currently, there are 2 Gobld deployments, as follows:\"),\"\\n\",n().createElement(l.table,null,n().createElement(l.thead,null,n().createElement(l.tr,null,n().createElement(l.th,null,\"Deployment Name\"),n().createElement(l.th,null,\"Description\"),n().createElement(l.th,null,\"GKE Cluster\"),n().createElement(l.th,null,\"Namespace\"),n().createElement(l.th,null,\"Terraform code\"),n().createElement(l.th,null,\"Values file\"))),n().createElement(l.tbody,null,n().createElement(l.tr,null,n().createElement(l.td,null,n().createElement(l.code,{display:\"inline\"},\"gobld-buildkite-flavortown\")),n().createElement(l.td,null,\"Gobld deployment for the \",n().createElement(l.code,{display:\"inline\"},\"elastic-flavortown\"),\" Buildkite organisation\"),n().createElement(l.td,null,n().createElement(l.code,{display:\"inline\"},\"ci-systems-dev\")),n().createElement(l.td,null,n().createElement(l.code,{display:\"inline\"},\"gobld\")),n().createElement(l.td,null,n().createElement(l.a,{href:\"https://github.com/elastic/ci/blob/main/terraform/providers/gcp/env/buildkite-dev/gobld.tf#L89\"},\"Helm release\")),n().createElement(l.td,null,n().createElement(l.a,{href:\"https://github.com/elastic/ci/blob/main/terraform/providers/gcp/env/buildkite-dev/values/gobld/gobld-buildkite-flavortown.yml\"},\"Values file\"))),n().createElement(l.tr,null,n().createElement(l.td,null,n().createElement(l.code,{display:\"inline\"},\"gobld-buildkite-elastic\")),n().createElement(l.td,null,\"Gobld deployment for the \",n().createElement(l.code,{display:\"inline\"},\"elastic\"),\" Buildkite organisation\"),n().createElement(l.td,null,n().createElement(l.code,{display:\"inline\"},\"ci-systems-prod\")),n().createElement(l.td,null,n().createElement(l.code,{display:\"inline\"},\"gobld\")),n().createElement(l.td,null,n().createElement(l.a,{href:\"https://github.com/elastic/ci/blob/main/terraform/providers/gcp/env/buildkite-prod/gobld.tf#L89\"},\"Helm release\")),n().createElement(l.td,null,n().createElement(l.a,{href:\"https://github.com/elastic/ci/blob/main/terraform/providers/gcp/env/buildkite-prod/values/gobld/gobld-buildkite-elastic.yml\"},\"Values file\"))))),\"\\n\",n().createElement(l.h2,{id:\"health-checks\"},\"Health checks\"),\"\\n\",n().createElement(l.p,null,\"As part of the Gobld \",n().createElement(l.a,{href:\"https://github.com/elastic/gobld/tree/main/helm\"},\"helm chart\"),\", Kubernetes \",n().createElement(l.code,{display:\"inline\"},\"liveness\"),\" and \",n().createElement(l.code,{display:\"inline\"},\"readiness\"),\" probes are configured to ensure\\nthat Gobld is happy and healthy.\",n().createElement(l.br),\"\\n\",\"More details on how the probes work can be found in the Kubernetes docs: \",n().createElement(l.a,{href:\"https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/\"},\"Configuring Liveness, Readiness and Startup probes\")),\"\\n\",n().createElement(l.h2,{id:\"graceful-termination\"},\"Graceful termination\"),\"\\n\",n().createElement(l.p,null,\"As outlined in the \",n().createElement(l.a,{href:\"../design.mdx\"},\"design\"),\" document, Gobld is written to be as stateless as possible.\",n().createElement(l.br),\"\\n\",\"Webhook events are received, added to an in-memory FIFO queue and then processed.\"),\"\\n\",n().createElement(l.p,null,\"However there is the potential for the processing of in-memory events to take a period of time, depending on configured rate\\nlimits, Cloud provider performance, queue depth, etc.\"),\"\\n\",n().createElement(l.p,null,\"As the queue only exists in-memory, Gobld has been written to gracefully handle the Kubernetes termination request by working\\nthrough any items in the queue before terminating.\"),\"\\n\",n().createElement(l.p,null,\"There is a limit to how long Kubernetes will wait for a pod to terminate - \",n().createElement(l.code,{display:\"inline\"},\"terminationGracePeriodSeconds\"),\".\",n().createElement(l.br),\"\\n\",\"The default value has been defined within the Helm chart \",n().createElement(l.a,{href:\"https://github.com/elastic/gobld/blob/main/helm/values.yaml#L35\"},n().createElement(l.code,{display:\"inline\"},\"values.yaml\")),\" file, after which\\ntime the pod will be forcibly killed and any events still in the queue will be lost.\"),\"\\n\",n().createElement(l.h2,{id:\"replicas\"},\"Replicas\"),\"\\n\",n().createElement(l.p,null,\"Kubernetes replicas are a means of running more than one instance of a specific Kubernetes pod.\"),\"\\n\",n().createElement(l.p,null,\"As Gobld is essentially stateless, this provides the opportunity to run multiple replicas of a Gobld deployment in order to\\nprovide greater resilience, scalability and reliability.\"),\"\\n\",n().createElement(l.p,null,\"Incoming API requests are automatically load-balanced across all of the available Gobld pods through the use of a Kubernetes service resource.\"),\"\\n\",n().createElement(l.h2,{id:\"configuration-changes-or-upgrades\"},\"Configuration changes or upgrades\"),\"\\n\",n().createElement(l.p,null,\"Gobld configuration changes or version upgrades are applied automatically via Terraform once a PR update has been tested and\\nmerged.\",n().createElement(l.br),\"\\n\",\"As part of deploying the change, a new Kubernetes deployment will be created with the new configuration and/or version.\",n().createElement(l.br),\"\\n\",\"Kubernetes will then spin up a new Gobld pod, wait for it to become \",n().createElement(l.code,{display:\"inline\"},\"Ready\"),\", and then stop one of the old pods.\",n().createElement(l.br),\"\\n\",\"This cycle will complete until all the old pods have been replaced with new ones and the old deployment has been removed.\"),\"\\n\",n().createElement(l.p,null,\"More details on how this process happens can be found here: \",n().createElement(l.a,{href:\"https://kubernetes.io/docs/tutorials/kubernetes-basics/update/update-intro/\"},\"Performing a Rolling Update\")))}}})(),a})()));","frontmatter":{"id":"ciGobldDeploy","slug":"/ci/gobld/deploy","title":"Gobld Deploy","summary":"Deployment overview","date":"2022-03-28T00:00:00.000Z","tags":["ci","ci/cd","developer tools","buildkite","gobld","engineering","platform"],"link":"https://github.com/elastic/ci/blob/main","linkPath":"docs/gobld/deploy.mdx"},"missionId":"krVideos"},"__N_SSG":true}