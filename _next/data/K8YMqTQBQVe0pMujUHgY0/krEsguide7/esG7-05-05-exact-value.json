{"pageProps":{"bundle":"!function(e,n){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=n(require(\"mdxJsReact\"),require(\"React\")):\"function\"==typeof define&&define.amd?define([\"mdxJsReact\",\"React\"],n):\"object\"==typeof exports?exports.MDXContent=n(require(\"mdxJsReact\"),require(\"React\")):e.MDXContent=n(e.mdxJsReact,e.React)}(this,((e,n)=>(()=>{\"use strict\";var t={24:e=>{e.exports=n},825:n=>{n.exports=e}},l={};function r(e){var n=l[e];if(void 0!==n)return n.exports;var o=l[e]={exports:{}};return t[e](o,o.exports,r),o.exports}r.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return r.d(n,{a:n}),n},r.d=(e,n)=>{for(var t in n)r.o(n,t)&&!r.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:n[t]})},r.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),r.r=e=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})};var o={};return(()=>{r.r(o),r.d(o,{default:()=>l});var e=r(825),n=r(24),t=r.n(n);const l=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},l=Object.assign({},(0,e.useMDXComponents)(),n.components),r=l.wrapper;return r?t().createElement(r,n,t().createElement(o)):o();function o(){var l=Object.assign({p:\"p\",strong:\"strong\",h2:\"h2\",ul:\"ul\",li:\"li\",pre:\"pre\",code:\"code\"},(0,e.useMDXComponents)(),n.components),r=l.DocTabs,o=l.DocTab,c=l.DocCallOut;return c||a(\"DocCallOut\",!0),o||a(\"DocTab\",!0),r||a(\"DocTabs\",!0),t().createElement(t().Fragment,null,t().createElement(l.p,null,\"지금까지 살펴본 풀 텍스트 검색은 스코어 점수 기반으로 **정확도(relevancy)**가 높은 결과부터 가져옵니다. Elasticsearch는 정확도를 고려하는 풀 텍스트 외에도 검색 조건의 \",t().createElement(l.strong,null,\"참 / 거짓 여부만 판별\"),\"해서 결과를 가져오는 것이 가능합니다. 풀 텍스트와 상반되는 이 특성을 \",t().createElement(l.strong,null,\"정확값(Exact Value)\"),\" 이라고 하는데 말 그대로 값이 정확히 일치 하는지의 여부 만을 따지는 검색입니다. Exact Value 에는 \",t().createElement(l.strong,null,\"term\"),\", \",t().createElement(l.strong,null,\"range\"),\" 와 같은 쿼리들이 이 부분에 속하며, 스코어를 계산하지 않기 때문에 보통 \",t().createElement(l.strong,null,\"bool\"),\" 쿼리의 \",t().createElement(l.strong,null,\"filter\"),\" 내부에서 사용하게 됩니다.\"),\"\\n\",t().createElement(l.h2,{id:\"bool--filter\"},\"bool : filter\"),\"\\n\",t().createElement(l.p,null,\"bool 쿼리의 filter 안에 하위 쿼리를 사용하면 스코어에 영향을 주지 않습니다. 다음 3개의 검색 결과를 비교 해 보도록 하겠습니다.\"),\"\\n\",t().createElement(l.ul,null,\"\\n\",t().createElement(l.li,null,\"match 쿼리로 fox 검색\"),\"\\n\"),\"\\n\",t().createElement(r,null,t().createElement(o,{name:\"request\"},t().createElement(l.pre,null,t().createElement(l.code,{className:\"language-javascript\",display:\"block\"},'GET my_index/_search\\n{\\n  \"query\": {\\n    \"match\": {\\n      \"message\": \"fox\"\\n    }\\n  }\\n}\\n'))),t().createElement(o,{name:\"response\"},t().createElement(l.pre,null,t().createElement(l.code,{className:\"language-javascript\",display:\"block\"},'{\\n  \"took\" : 1,\\n  \"timed_out\" : false,\\n  \"_shards\" : {\\n    \"total\" : 1,\\n    \"successful\" : 1,\\n    \"skipped\" : 0,\\n    \"failed\" : 0\\n  },\\n  \"hits\" : {\\n    \"total\" : {\\n      \"value\" : 4,\\n      \"relation\" : \"eq\"\\n    },\\n    \"max_score\" : 0.32951736,\\n    \"hits\" : [\\n      {\\n        \"_index\" : \"my_index\",\\n        \"_type\" : \"_doc\",\\n        \"_id\" : \"1\",\\n        \"_score\" : 0.32951736,\\n        \"_source\" : {\\n          \"message\" : \"The quick brown fox\"\\n        }\\n      },\\n      {\\n        \"_index\" : \"my_index\",\\n        \"_type\" : \"_doc\",\\n        \"_id\" : \"4\",\\n        \"_score\" : 0.32951736,\\n        \"_source\" : {\\n          \"message\" : \"Brown fox brown dog\"\\n        }\\n      },\\n      {\\n        \"_index\" : \"my_index\",\\n        \"_type\" : \"_doc\",\\n        \"_id\" : \"2\",\\n        \"_score\" : 0.23470737,\\n        \"_source\" : {\\n          \"message\" : \"The quick brown fox jumps over the lazy dog\"\\n        }\\n      },\\n      {\\n        \"_index\" : \"my_index\",\\n        \"_type\" : \"_doc\",\\n        \"_id\" : \"3\",\\n        \"_score\" : 0.23470737,\\n        \"_source\" : {\\n          \"message\" : \"The quick brown fox jumps over the quick dog\"\\n        }\\n      }\\n    ]\\n  }\\n}\\n')))),\"\\n\",t().createElement(l.ul,null,\"\\n\",t().createElement(l.li,null,\"match 쿼리로 fox 와 quick 검색\"),\"\\n\"),\"\\n\",t().createElement(r,null,t().createElement(o,{name:\"request\"},t().createElement(l.pre,null,t().createElement(l.code,{className:\"language-javascript\",display:\"block\"},'GET my_index/_search\\n{\\n  \"query\": {\\n    \"bool\": {\\n      \"must\": [\\n        {\\n          \"match\": {\\n            \"message\": \"fox\"\\n          }\\n        },\\n        {\\n          \"match\": {\\n            \"message\": \"quick\"\\n          }\\n        }\\n      ]\\n    }\\n  }\\n}\\n'))),t().createElement(o,{name:\"response\"},t().createElement(l.pre,null,t().createElement(l.code,{className:\"language-javascript\",display:\"block\"},'{\\n  \"took\" : 1,\\n  \"timed_out\" : false,\\n  \"_shards\" : {\\n    \"total\" : 1,\\n    \"successful\" : 1,\\n    \"skipped\" : 0,\\n    \"failed\" : 0\\n  },\\n  \"hits\" : {\\n    \"total\" : {\\n      \"value\" : 3,\\n      \"relation\" : \"eq\"\\n    },\\n    \"max_score\" : 0.9468958,\\n    \"hits\" : [\\n      {\\n        \"_index\" : \"my_index\",\\n        \"_type\" : \"_doc\",\\n        \"_id\" : \"1\",\\n        \"_score\" : 0.9468958,\\n        \"_source\" : {\\n          \"message\" : \"The quick brown fox\"\\n        }\\n      },\\n      {\\n        \"_index\" : \"my_index\",\\n        \"_type\" : \"_doc\",\\n        \"_id\" : \"3\",\\n        \"_score\" : 0.8762741,\\n        \"_source\" : {\\n          \"message\" : \"The quick brown fox jumps over the quick dog\"\\n        }\\n      },\\n      {\\n        \"_index\" : \"my_index\",\\n        \"_type\" : \"_doc\",\\n        \"_id\" : \"2\",\\n        \"_score\" : 0.6744513,\\n        \"_source\" : {\\n          \"message\" : \"The quick brown fox jumps over the lazy dog\"\\n        }\\n      }\\n    ]\\n  }\\n}\\n')))),\"\\n\",t().createElement(l.ul,null,\"\\n\",t().createElement(l.li,null,\"must 로 fox, filter 로 quick 검색\"),\"\\n\"),\"\\n\",t().createElement(r,null,t().createElement(o,{name:\"request\"},t().createElement(l.pre,null,t().createElement(l.code,{className:\"language-javascript\",display:\"block\"},'GET my_index/_search\\n{\\n  \"query\": {\\n    \"bool\": {\\n      \"must\": [\\n        {\\n          \"match\": {\\n            \"message\": \"fox\"\\n          }\\n        }\\n      ],\\n      \"filter\": [\\n        {\\n          \"match\": {\\n            \"message\": \"quick\"\\n          }\\n        }\\n      ]\\n    }\\n  }\\n}\\n'))),t().createElement(o,{name:\"response\"},t().createElement(l.pre,null,t().createElement(l.code,{className:\"language-javascript\",display:\"block\"},'{\\n  \"took\" : 2,\\n  \"timed_out\" : false,\\n  \"_shards\" : {\\n    \"total\" : 1,\\n    \"successful\" : 1,\\n    \"skipped\" : 0,\\n    \"failed\" : 0\\n  },\\n  \"hits\" : {\\n    \"total\" : {\\n      \"value\" : 3,\\n      \"relation\" : \"eq\"\\n    },\\n    \"max_score\" : 0.32951736,\\n    \"hits\" : [\\n      {\\n        \"_index\" : \"my_index\",\\n        \"_type\" : \"_doc\",\\n        \"_id\" : \"1\",\\n        \"_score\" : 0.32951736,\\n        \"_source\" : {\\n          \"message\" : \"The quick brown fox\"\\n        }\\n      },\\n      {\\n        \"_index\" : \"my_index\",\\n        \"_type\" : \"_doc\",\\n        \"_id\" : \"2\",\\n        \"_score\" : 0.23470737,\\n        \"_source\" : {\\n          \"message\" : \"The quick brown fox jumps over the lazy dog\"\\n        }\\n      },\\n      {\\n        \"_index\" : \"my_index\",\\n        \"_type\" : \"_doc\",\\n        \"_id\" : \"3\",\\n        \"_score\" : 0.23470737,\\n        \"_source\" : {\\n          \"message\" : \"The quick brown fox jumps over the quick dog\"\\n        }\\n      }\\n    ]\\n  }\\n}\\n')))),\"\\n\",t().createElement(l.p,null,\"첫번째는 \",t().createElement(l.strong,null,\"match\"),\" 쿼리로 \",t().createElement(l.strong,null,\"fox\"),\" 를 검색했을 때 \",t().createElement(l.strong,null,\"4개\"),\"의 도큐먼트가 검색되었고 가장 높은 스코어는 \",t().createElement(l.code,{display:\"inline\"},'\"_score\" : 0.32951736'),\" 입니다. 두번째는 검색에 \",t().createElement(l.strong,null,\"match\"),\" 쿼리로 \",t().createElement(l.strong,null,\"quick\"),\" 을 추가했을 때 \",t().createElement(l.strong,null,\"3개\"),\"의 도큐먼트가 검색되었고 가장 높은 스코어는 \",t().createElement(l.code,{display:\"inline\"},'\"_score\" : 0.9468958'),\" 입니다. 세번째는 첫번째의 검색에 \",t().createElement(l.strong,null,\"filter\"),\" 구문 안에 \",t().createElement(l.strong,null,\"quick\"),\" 을 추가했는데 3개의 도큐먼트가 검색되었고 가장 높은 스코어는 첫번째 쿼리와 같은 \",t().createElement(l.code,{display:\"inline\"},'\"_score\" : 0.32951736'),\" 입니다.\"),\"\\n\",t().createElement(l.p,null,\"이렇게 \",t().createElement(l.strong,null,\"filter\"),\"는 검색에 조건은 추가하지만 스코어에는 영향을 주지 않도록 제어할 때 사용합니다. 보통 쇼핑몰에서 검색어로 정확도가 높은 상품명을 검색하면서 생산 업체를 다시 필터링 하는 등의 용도로 사용이 가능합니다.\"),\"\\n\",t().createElement(l.p,null,t().createElement(l.strong,null,\"filter\"),\" 내부에서 \",t().createElement(l.strong,null,\"must_not\"),\" 과 같은 다른 \",t().createElement(l.strong,null,\"bool\"),\" 쿼리를 포함하려면 \",t().createElement(l.strong,null,\"filter\"),\" 내부에 \",t().createElement(l.strong,null,\"bool\"),\" 쿼리를 먼저 넣고 그 안에 다시 \",t().createElement(l.strong,null,\"must_not\"),\" 을 넣어야 합니다. 다음은 \",t().createElement(l.strong,null,\"fox\"),\" 를 포함하면서 \",t().createElement(l.strong,null,\"dog\"),\" 는 포함하지 않는 도큐먼트를 검색하는 쿼리입니다. \",t().createElement(l.strong,null,\"dog\"),\" 를 제외하는 \",t().createElement(l.strong,null,\"must_not\"),\" 쿼리가 \",t().createElement(l.strong,null,\"filter\"),\" 안에 있기 때문에 스코어는 \",t().createElement(l.strong,null,\"fox\"),\" 에만 영향을 받습니다.\"),\"\\n\",t().createElement(r,null,t().createElement(o,{name:\"request\"},t().createElement(l.pre,null,t().createElement(l.code,{className:\"language-javascript\",display:\"block\"},'GET my_index/_search\\n{\\n  \"query\": {\\n    \"bool\": {\\n      \"must\": [\\n        {\\n          \"match\": {\\n            \"message\": \"fox\"\\n          }\\n        }\\n      ],\\n      \"filter\": [\\n        {\\n          \"bool\": {\\n            \"must_not\": [\\n              {\\n                \"match\": {\\n                  \"message\": \"dog\"\\n                }\\n              }\\n            ]\\n          }\\n        }\\n      ]\\n    }\\n  }\\n}\\n'))),t().createElement(o,{name:\"response\"},t().createElement(l.pre,null,t().createElement(l.code,{className:\"language-javascript\",display:\"block\"},'{\\n  \"took\" : 2,\\n  \"timed_out\" : false,\\n  \"_shards\" : {\\n    \"total\" : 1,\\n    \"successful\" : 1,\\n    \"skipped\" : 0,\\n    \"failed\" : 0\\n  },\\n  \"hits\" : {\\n    \"total\" : {\\n      \"value\" : 1,\\n      \"relation\" : \"eq\"\\n    },\\n    \"max_score\" : 0.32951736,\\n    \"hits\" : [\\n      {\\n        \"_index\" : \"my_index\",\\n        \"_type\" : \"_doc\",\\n        \"_id\" : \"1\",\\n        \"_score\" : 0.32951736,\\n        \"_source\" : {\\n          \"message\" : \"The quick brown fox\"\\n        }\\n      }\\n    ]\\n  }\\n}\\n')))),\"\\n\",t().createElement(l.p,null,\"위 검색에서 결과는 하나만 리턴 되었지만 스코어는 \",t().createElement(l.code,{display:\"inline\"},'\"_score\" : 0.32951736'),\"으로 match 쿼리로 fox만 검색했을 때의 결과와 동일합니다.\"),\"\\n\",t().createElement(l.h2,{id:\"keyword\"},\"keyword\"),\"\\n\",t().createElement(l.p,null,\"문자열 데이터는 \",t().createElement(l.strong,null,\"keyword\"),\" 형식으로 저장하여 정확값 검색이 가능합니다. \",t().createElement(l.strong,null,\"Keyword\"),\" 에 대해서는 뒤에 \",t().createElement(l.strong,null,\"매핑\"),\"에서 다시 설명 하겠습니다. 아래의 쿼리는 message 필드값이 \",t().createElement(l.strong,null,'\"Brown fox brown dog\"'),\" 문자열과 공백, 대소문자까지 정확히 일치하는 데이터만을 결과로 리턴합니다.\"),\"\\n\",t().createElement(r,null,t().createElement(o,{name:\"request\"},t().createElement(l.pre,null,t().createElement(l.code,{className:\"language-javascript\",display:\"block\"},'GET my_index/_search\\n{\\n  \"query\": {\\n    \"bool\": {\\n      \"filter\": [\\n        {\\n          \"match\": {\\n            \"message.keyword\": \"Brown fox brown dog\"\\n          }\\n        }\\n      ]\\n    }\\n  }\\n}\\n'))),t().createElement(o,{name:\"response\"},t().createElement(l.pre,null,t().createElement(l.code,{className:\"language-javascript\",display:\"block\"},'{\\n  \"took\" : 0,\\n  \"timed_out\" : false,\\n  \"_shards\" : {\\n    \"total\" : 1,\\n    \"successful\" : 1,\\n    \"skipped\" : 0,\\n    \"failed\" : 0\\n  },\\n  \"hits\" : {\\n    \"total\" : {\\n      \"value\" : 1,\\n      \"relation\" : \"eq\"\\n    },\\n    \"max_score\" : 0.0,\\n    \"hits\" : [\\n      {\\n        \"_index\" : \"my_index\",\\n        \"_type\" : \"_doc\",\\n        \"_id\" : \"4\",\\n        \"_score\" : 0.0,\\n        \"_source\" : {\\n          \"message\" : \"Brown fox brown dog\"\\n        }\\n      }\\n    ]\\n  }\\n}\\n')))),\"\\n\",t().createElement(l.p,null,\"keyword 타입으로 저장된 필드는 스코어를 계산하지 않고 정확값의 일치 여부만을 따지기 때문에 스코어가 \",t().createElement(l.code,{display:\"inline\"},'\"_score\" : 0.0'),\" 으로 나오게 됩니다. 스코어를 계산하지 않기 때문에 \",t().createElement(l.strong,null,\"keyword\"),\" 값을 검색 할 때는 \",t().createElement(l.strong,null,\"filter\"),\" 구문 안에 넣도록 합니다.\"),\"\\n\",t().createElement(c,null,t().createElement(l.p,null,\"filter 안에 넣은 검색 조건들은 스코어를 계산하지 않지만 캐싱이 되기 때문에 쿼리가 더 가볍고 빠르게 실행됩니다. keyword 와 뒤에 설명할 range 쿼리와 같이 스코어 계산이 필요하지 않은 쿼리들은 모두 filter 안에 넣어서 실행하는 것이 좋습니다.\")))}};function a(e,n){throw new Error(\"Expected \"+(n?\"component\":\"object\")+\" `\"+e+\"` to be defined: you likely forgot to import, pass, or provide it.\")}})(),o})()));","frontmatter":{"id":"esG7-05-05-exact-value","slug":"/krEsguide7/esG7-05-05-exact-value","title":"5.5 정확값 쿼리 - Exact Value Query","description":"모든 문서에 대한 저작권은 Elastic 과 김종민(kimjmin@gmail.com) 에게 있으며 허가되지 않은 무단 복제나 배포 및 출판을 금지합니다. 본 문서의 내용 및 포함된 자료를 인용하고자 하는 경우 출처를 명시하고 게재된 주소를 김종민(kimjmin@gmail.com)에게 알려주시기 바랍니다.","date":"2022-01-25T00:00:00.000Z","tags":["query","bool","filter"],"link":"file:///Users/kimjmin/git/docs-kr/esguide7","linkPath":"05-search/05-05-exact-value.mdx"},"missionId":"krEsguide7"},"__N_SSG":true}